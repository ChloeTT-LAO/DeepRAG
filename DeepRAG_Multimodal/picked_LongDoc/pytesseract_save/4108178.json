{
    "Page_1": "archives-ouvertes\n\nCHOReOS perspective on the Future Internet and\ninitial conceptual model (D1.2)\n\nMarco Autili, Davide Di Ruscio, Amleto Di Salle, Nikolaos Georgantas, Sara\n\nHachem, Valérie Issamy, Athanasios Parathyras, Lefteris Trimintzios, Darius\n\nSilingas, James Lockerbie, et al.\n\n> To cite this version:\n\nMarco Autili, Davide Di Ruscio, Amleto Di Salle, Nikolaos Georgantas, Sara Hachem, et al..\n\nCHOReOS perspective on the Future Internet and initial conceptual model (D1.2). 2011.\n\n00663429\n\nHAL Id: hal-00663429\nhttps: //hal.inria.fr /hal-00663429\n\nPreprint submitted on 27 Jan 2012\n\nHAL is a multi-disciplinary open access\narchive for the deposit and dissemination of sci-\nentific research documents, whether they are pub-\nlished or not. The documents may come from\nteaching and research institutions in France or\nabroad, or from public or private research centers.\n\nL’archive ouverte pluridisciplinaire HAL, est\ndestinée au dépdt et a la diffusion de documents\nscientifiques de niveau recherche, publiés ou non,\némanant des établissements d’enseignement et de\nrecherche francais ou étrangers, des laboratoires\npublics ou privés.",
    "Page_2": "| eae\nNS\nFa) c\n\nLarge Scale yor for the Future Internet\n\n \n\nICT IP Project\n\nDeliverable D1.2\n\nCHOREeOS Perspective on the\nFuture Internet and\nInitial Conceptual Model\n\nhttp://www.choreos.eu\n\nTHALES |\n= |ineta|\n\nWw _ 8 isin @)MLS\n\nowe ee CITY UNIVERSITY\ne . , US\nv.crip re Universita\nHd 3 WIND ¥\nCoF = ENTH FRAMI RK\nwr Se recEaie”",
    "Page_3": "",
    "Page_4": "Project Number\nProject Title\n\nFP7-257178\nCHOReOS - Large Scale Choreographies for the Future Internet\n\n \n\n \n\nDeliverable Number\nTitle of Deliverable\n\nNature of Deliverable\nDissemination level\nVersion\n\nContractual Delivery Date\nActual Delivery Date\nContributing WP\nEditor(s)\n\nAuthor(s)\n\nReviewer(s)\n\n \n\nD1.2\n\nCHOReOS perspective on the Future Internet and\ninitial conceptual model\n\nReport\n\nPublic\n\nVA.0\n\n31 March 2011\n\n11 April 2011\n\nWP1\n\nMarco Autili, Davide Di Ruscio (UDA)\n\nMarco Autili, Davide Di Ruscio, Amleto Di Salle (UDA);\nNikolaos Georgantas, Sara Hachem, Valérie Issarny (INRIA);\nAthanasios Parathyras, Lefteris Trimintzios (VTRIP);\nDarius Silingas (BP1);\n\nJ ames Lockerbie, Neil Maiden (CITY);\n\nAmira Ben Hamida (Petals),\n\nAntonia Bertolino, Guglielmo De Angelis (CNR-ISTI);\nAndrea Polini (Unicam);\n\nDionysis Athanasopoulos, Apostolos Zarras (UOI).\nHugues Vincent (THALES),\n\nValerie Issarny (INRIA),\n\nDarius Silingas (NME).\n\n \n\n \n\nFP7-257178\n\nCHOReOS",
    "Page_5": "Abstract\n\nThe D1.2 deliverable outlines the CHOReOS perspective on the Future Internet and its conceptualization. In\nparticular, the deliverable focuses on:\n\n- Definition of the Future Internet and related Future Internet of Services and (Smart) Things, as considered\nwithin CHOReOS, further stressing the many dimensions underpinning the Ultra-Large Scale of the Future\nInternet;\n\n- Definition of the initial conceptual model of the CHOReOS Service-Oriented Architecture (SOA) for the Future\nInternet, identifying the impact of the ULS dimensions upon the traditional SOA paradigms and associated\ninfrastructure.\n\n \n\nKeyword list\n\nUltra-Large Scale systems, Future Internet, Future Internet of Services, Future Internet of Things,\nChoreography-centric Service Oriented Computing and Architecture, Choreography, Conceptual Model, Meta-\nmodeling, Software Architecture, Requirements, Model-driven Engineering, BPMN2.\n\n \n\n \n\n \n\nFP7-257178 CHOReOS ii",
    "Page_6": "Document History\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\nVersion Changes Author(s)\nvo First version of outline, integration of material from the|- Marco Autili (UDA)\nDoW, and notes from the Evaluation Summary Report,\nspecific issues/questions addressed during the Evaluation\nHearing, EC Questions and Recommendations, first\nfeedback from the Collaboration meeting (19-20 October in\nBrussels)\nV0.1 Second version of outline embedding comments from}|- Marco Autili (UDA)\nValérie and Hugues\nV1.0 Final Outline - Marco Autili (UDA)\nV1.1 First Draft including a _ preliminary version of the|- Marco Autili, Davide Di\nIntroduction, Section 2 and Section 4 Ruscio, Amleto Di Salle\n(UDA)\nV1.2 Refined Draft including a preliminary version of Section 3 - Riccardo Mazza (WIND)\n- Gianmarco\nPanza,Teodoro De\nGiorgio, Maurilio Zuccala\n(CEFRIEL)\nV1.3 First integration of all contributions -_ All Authors\nV1.3.1 Revised/Integrated Chapter 2 - Valérie Issarny, Sara\nHachem, Georgantas\nNikolaos (INRIA)\n- Apostolos Zarras,\nDionysis Athanasopoulos,\nPanos Vassiliadis (UO)\nV1.3.2 Overall revision/integration of all chapters but Chapter 2 - Marco Autili, Davide Di\nRuscio, Amleto Di Salle\n(UDA)\nV1.3.3 Overall revision/integration of all chapters - Marco Autili, Davide Di\nRuscio, Amleto Di Salle\n(UDA)\n- Valérie Issarny, Sara\nHachem, Georgantas\nNikolaos (INRIA)\nV1.4 Chaper 4 has been completely rewritten and has been split}- Marco Autili, Davide Di\ninto “Baseline for the CHOReOS Conceptual Model” Ruscio (UDA)\n(Chaper 4) and “Initial version of the CHOReOS Conceptual\nModel” (Chaper 5)\nV1.4.1 Overall revision. Many contents have been added to|- Marco Autili, Davide Di\nChapter 5 concerning the initial CHOReOS Conceptual} Ruscio (UDA)\nModel. A new section has been added to discuss future\nsteps towards the CHOReOS Architectural Style\nv1.4.2 Integration of contributions into Chapter 4 - Marco Autili, Davide Di\nRuscio (UDA)\nV1.4.3 Overall revision of Chapter 4 - Marco Autili, Davide Di\nRuscio (UDA)\n- Neil Maiden, James\nLockerbie (CITY )\n\n \n\n \n\n \n\nFP7-257178\n\nCHOReOS",
    "Page_7": "v1.4.4 Integration of contributions into Chapter 4 and 5 from Petals )- Marco Autili, Davide Di\nRuscio (UDA)\n- Amira Ben Hamida\n(Petals)\n- Antonia Bertolino,\nGuglielmo De Angelis,\nDaniela Mulas (CNR-ISTI)\n- Andrea Polini (Unicam)\n- Apostolos Zarras (UOI)\nV1.4.5 Addressing of comments from Valérie Issarny (SL) - Marco Autili, Davide Di\nRuscio (UDA)\nV1.4.6 Integration of contents from Daniel Macédo Batista and|- Marco Autili, Davide Di\noverall revision by UDA Ruscio (UDA)\n- Daniel Macédo Batista\n(USP)\nV1.4.7 Integration of contents from UOI, CNR and VTRIP, and|- Marco Autili, Davide Di\noverall revision by UDA. Ruscio (UDA)\n- Apostolos Zarras (UOI)\n- Antonia Bertolino,\nGuglielmo De Angelis,\nDaniela Mulas (CNR-ISTI)\n- Lefteris Trimintzios,\nAthanasios Parathyras\n(VTRIP)\nV1.4.8 Removal of Chapter 3. Dynaroute scenario has been|- Marco Autili, Davide Di\nincluded in Chapter 2. Overall revision by UDA. Ruscio (UDA)\nv1.4.9 Integration of new contribution by INRIA for Chapter 2 and)- Marco Autili, Davide Di\nSection 4.2 Ruscio (UDA)\n- Valérie Issarny, Sara\nHachem, Georgantas\nNikolaos (INRIA)\nV2.0 Overall revision of document -_ Valérie Issarny (INRIA)\nV2.2 Comments by V. Issarny addressed - M. Autili, D. Di Ruscio\n(UDA)\nV2.3 Integration of comments by A. Zarras, V.Issarny, N.|- M. Autili, D. Di Ruscio\nGeorgantas (UDA)\nV2.4 Integration of the revised Discovery Concern section by|- M.Autili, D.Di Ruscio\nA.Zarras (UDA)\nV2.5 Integration of comments by N. Georgantas and A. Ben|- M.Autili, D.Di Ruscio\nHamida (UDA)\n\n \n\n \n\nDocument Review\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\nReview Date Ver. Reviewers Comments\nOutline | 14/10/10 1.0 |All authors OK by all\nDraft1 | 01/04/11 2.0 |V. Issarny Commented version by V.Issarny\nDraft2 | 04/04/11 2.2 | M. Autili, D. Di Ruscio Comments by V. Issarny addressed\nQA 10/04/11 3.0 |V.Issarny (SL), Complete version released for final\nMarco Autili (WPL+DL), review\nHugues Vincent (PL),\nDarius Silingas (NME -\nExternal Reviewer)\nPTC 11/04/10 V3 |PTC /\n\n \n\n \n\n \n\nFP7-257178\n\nCHOReOS",
    "Page_8": "Glossary, acronyms & abbreviations\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\nItem Description\nBPEL Business Process Execution Language\nBPMN Business Process Modeling Notation\n\nDL Deliverable Leader\nDOW Description of Work\n\nFIA Future Internet Assembly\nMDE Model Driven Engineering\n\n \n\nNEXOF NESSI Open Service Framework\n\n \n\nNEXOF-RA_| NESSI Open Service Framework-R eference Architecture\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\nPL Project Leader\nSL Scientific Leader\nSLA Service Level Agreement\nSLO Service Level Objective\nSOA Service Oriented Architecture\nSoaML Service oriented architecture Modeling Language\nSOC Service-Oriented Computing\nTDD Test-Driven Development\n\n \n\nUPDM Unified Profile for DODAF and MODAF\n\n \n\nUSDL Unified Service Description Language\n\n \n\n \n\n \n\n \n\nULS Ultra-Large Scale\n\nWP Work Package\n\nWPL Work Package Leader\nWSCl Web Service Choreography Initiative\n\n \n\nWS-CDL Web Service - Choreography Description Language\n\n \n\nWSDL Web Service Description Language\n\n \n\n \n\n \n\nV&V Validation & Verification\n\n \n\n \n\n \n\nFP7-257178 CHOReOS",
    "Page_9": "FP7-257178\n\nCHOReOS\n\nvi",
    "Page_10": "Table of Contents\n\n \n\n  \n  \n  \n \n \n  \n   \n \n \n \n \n \n \n \n \n   \n   \n \n \n\n1. INTTOMUCTION von nnn nner een 1\n2. Future Internet: The CHOReOS Definition ... aw 3\n2.1. The Many Facets of the Future Internet........ wd\n2.1.1. Core Domains of the Future Internet... eieeeseeeeesseeeeneseretseeneetesntesneeenees 3\n2.1.2. Cross-domain Challenges of the Future Internet ........ ccc cccceeeeeeteeceeeeseeeneees 6\n2.1.3. CHOReOS Focus on the Future Internet of Services and (Smart) Things........ 9\n\n2.2. Evolution towards the Future Internet of Services and Smart THINGS 1.0... eeeeeeseeeeee 9\n2.2.1. Population of Services & Smart THINGS .......c eect eeeteeeeeeetteeeteeeeeetineeeees 10\n2.2.2. Complexity of Services & Smart THINGS ...... eee eect eee eete eter eeetteeeees 11\n2.2.3. | Functional Diversity of Services and Smart Things... we Ll\n2.2.4. Concluding REMArKS 00... eee eeeee eee eeeeeeteeeeceentaeeeneees wa 12\n\n2.3. Future Internet Requirements from the DynaRoute Use Case... we 12\n3. The NEXOF Reference Architecture ....ususeeeeee we L7\n3.1. The NEXOF Reference Architecture in a Nutshell. we L7\n3.1.1. Guidelines and Principles... ceeeeeeees we 19\n3.1.2. Reference Specification... eee we LO\n3.1.3. Reference Model............ 20\n3.1.4. Reference Model vs Reference Specification .. we 2l\n3.2. Overview of the Composition CONCEMN........ceeeeeeeetees we 22\n\n4. Initial Version of the CHOReOS Conceptual Model...\n4.1. Composition Concern\n4.1.1. Structure View\n4.1.2. Data Flow..........\n4.2. Presentation Concern.. bee\n4.3. AnalySiS CONCEIN occ eccccte ett eet nen rece eee t secre neste de ene enaee tease caeenaeetieaees\n4.3.1. Structure View\n4.3.2. Data Flow..........\n4.4. Discovery Concern...\n4.4.1. Structure View...\n4.4.2. Data Flow....\n\n4.5. Message Concern........\n4.5.1. Structure View...\n4.5.2. Data Flow..........\n4.6. Service Concern...\n4.7, RESOUrCE CONCEMN veces\n4.8. Governance and Management Concern....\n4.8.1. Structure ViOW..... eee ceeeeeeeteees bee\n4.8.2. Data FIOW. ce ee nec cee reece dec ceeeteesiieeecenteesiniees\n4.9. S@CUrity CONCEIN oo eect et enter etree eer rennet nie te sn eenennnetesneesiesnieesiesieeenesieesenas\n5. Specifying and Realizing Concepts of the Initial Conceptual Model.\n5.1. Baseline for Domain E xpert Specification of Requirements... ve\n5.2. Baseline for Service Specifications ...... eee eeeetesseeteeeeeetesneeeeeteetetseenteeeentetnaeeates\n5.2.1. SoaML - Service-oriented architecture Modeling Language.........eceeeseeeees\n5.2.2. USDL - Unified Service Description Language ........ seers\n5.3. Baseline for Choreography Specifications v0.0... eee\n5.4. Baseline for Choreography Execution...........\n\n5.5. Baseline for Governance and V&V ..\n6. CONCIUSIONS visscsseessesstessesstereenssersenseeas wn\n7. REPCPENCES wiisiestteseeseeeesstereeeeseeseesseeeeeseeseeseesseeseesseesecsseaeesesseeees sna seeseasesaeeesseenesesnanans\n\n \n\nFP7-257178 CHOReOS vii",
    "Page_11": "FP7-257178 CHOReOS viii",
    "Page_12": "1, Introduction\n\nThe Future Internet, as a particular case of Ultra-Large Scale (ULS) systems [ULS 06], constitutes\na futuristic vision of a yet-to-come Internet whose “scale changes everything”. As a matter of fact, the\nunderstanding of the Future Internet is receiving significant attention (e.g., [TF110]) since, as for any\nnew domain, there is not yet a well established characterization of it. In the context of the European\nEconomic Recovery Plan, it is worth mentioning the Future Internet Assembly (FIA?) that groups over\n100 projects to coordinate their R&D activities to foster a strong European footprint on Future\nInternet. The main objective is developing open, standardized, cross-sector service infrastructures.\nFrom a European policy perspective, sectors such as healthcare, mobility, environment and energy\nmanagement are prime candidates to benefit from novel “smart” - Internet-empowered -\ninfrastructures, which will facilitate the rapid take-up and adoption of services by millions of users.\n\nThe CHOReOS project positions itself in the above vision of the Future Internet, whilst focusing on\nthe Future Internet of Services and (Smart) Things. In this scenario, the highly-scalable\nchoreographies that CHOReOS wants to investigate play a central role and, as such, their key\ncharacteristics and requirements need to be identified by fully articulating the significance and\ncentrality of collaboration of services in the context of Future Internet systems.\n\nAs reported in CHOReOS deliverable [D1.1], a number of valuable conceptual and architectural\ncharacterizations have been proposed in the literature for modeling/describing service-oriented\nsystems. Roughly speaking, it can be said that all these approaches strive towards the same goal\neven though at different levels of abstraction and with different specific purposes. The most recent\napproach is the NEXOF Reference Architecture (NEXOF-RA)*. NEXOF-RA defines a pattern-based\nreference architecture for SOA infrastructures within the Future Internet and, as part of it, defines a\nconceptual model specifying the first-level entities that constitute these infrastructures, the facilities\nthey provide, as well as relationships among them [SLC10]. However, NEXOF-RA does not\nemphasize the concept of choreography, which is abstractly considered as a specialization of service\ncomposition, without providing a clear definition of it. Instead, CHOReOS aims at investigating the\nimpact of the Future Internet’s ULS on service-oriented systems realized as choreographies of\nservices.\n\nWithin this line of research, the purpose of this deliverable is to present the CHOReOS perspective\non the Future Internet and related challenges, together with introducing the resulting conceptual\nmodel for the choreography-based Future Internet of Services, with a special focus on the supporting\ninfrastructure. Accordingly, the deliverable is structured as follows:\n\n- Chapter 2 provides a characterization of the Future Internet, and related Future Internet of\nServices and Things, as considered within CHOReOS, further stressing the many challenges\nthat this poses for the development of systems.\n\n- Chapter 3 then outlines the reference architecture and the embedded conceptual model\ndefined by the NEXOF-RA project, which serve as a baseline to the definition of the\nCHOReOS Conceptual Model for the choreography-based Future Internet of Services.\n\n- Chapter 4 defines the initial conceptual model for CHOReOS, building upon the Future\nInternet characterization given in Chapter 2, and the baseline reference architecture surveyed\nin Chapter 3. The conceptual model provides a high level common ground by capturing the\nrelevant entities/concepts, and relationships among them, underlying the choreography-based\nFuture Internet, and will serve as input to the development of the RTD work packages WP2-3-\n4. As usual, the conceptual model is defined following an iterative process that starts with the\nrepresentation of preliminary identified concepts, which is the focus of this deliverable. From\nthat perspective, in its initial version, the CHOReOS conceptual model provides some\nextensions to NEXOF-RA. In particular, it emphasizes service choreography that is becomes\na first-class concept in CHOReOS. As the project progresses, CHOReOS concepts will be\nrefined/extended according to the outcomes of RTD work packages WP2 to WP5.\n\n1\n2\n\nhttp://www.future-internet.eu/\nhtto://www.nexof-ra.eu/\n\n \n\nFP7-257178 CHOReOS 1",
    "Page_13": "- Chapter 5 further describes baselines for different languages, models, technologies that can\n\nbe used to specify and realize concepts embedded within the CHOReOS initial conceptual\nmodel.\n\n- Finally, Chapter 6 concludes the deliverable, with a summary of its contribution and follow-up\nwork to be undertaken next, in particular based on the initial conceptual model definition.\n\n \n\nFP7-257178 CHOReOS 2",
    "Page_14": "2. Future Internet: The CHOReOS Definition\n\nOver the years, Internet has become the most important networking infrastructure, providing an\nintegrated entity enabling: creating, contributing, sharing, using, and integrating information and\nknowledge by all. As a result, the Internet is changing at a fast pace and is called to evolve into the\nFuture Internet, i.e., service- and self-aware federated networks that provide built-in and integrated\ncapabilities such as: contextualization, reliability, robustness, mobility, security, service support, and\nself-management of communication resources and services [TF1I10].\n\nAs mentioned in the introduction, the Future Internet Assembly (FIA) aims at fostering the\ndevelopment of open, standardized, cross-sector service platforms so that many sectors such as\nhealthcare, mobility, environment and energy management can benefit from novel and smart\ninfrastructures supporting service exploitation by millions of users. Still, several research challenges\nmust be overcome to attain such a goal due to the shortcomings of today’s Internet, especially\nregarding the lack of built-in facilities to support non-basic functionalities required by a service-aware\nInternet [FIA09]. The work described in [ETP09] further illustrates the overall objectives and\nambitions underlying the trend towards the Future Internet in Europe. In particular, the authors of\n[ETP 09] propose a strategy and action plan that will make the Future Internet an industrial, economic\nand societal success for Europe. Potential problems and risks associated with the Future Internet as\nwell as potential opportunities/benefits of a new networking approach are discussed in [FIAMANAO9].\nSome concrete usage scenarios of Future Internet are also proposed in [FIAFCNO7, FISOO9,\nFIREO9, FISEO9, RWI09]. For each scenario, the authors give description, functional requirements,\npotential barriers and problems, R&D challenges, as well as potentials for business innovation.\n\nBeyond initiatives supported by the EC (see http://www. future-internet.eu), the Future Internet has\nbecome the main focus of several research and development initiatives all over the world, including\ninitiatives in the USA (e.g., the NSF Future Internet Design (FIND) initiative - htto://www.nets-\nfind.net), China (e.g., China Next Generation Internet (CNGI) -\nhttp: /www.cstnet.net.cn/english/cngi/cngi.htm; and Ministry of Science and Technology 863 program\nhttp://www. ek cn/eng/programmes1/200610/t20061009 36225.htm), Korea (e.g.,\nhttp://fif.kr) and J apan (e.g., http://akari-project.nict.go.jp/eng/overview.htm). This effectively leads to\na noticeable number of projects whose aim is to provide and implement a vision leading to the\nestablishment of a global-scale, interoperable, and secure smart Internet.\n\n \n\nHowever, despite and maybe because of the tremendous interest for the Future Internet, the term is\nvery generic and no common definition has been adopted yet. Still, the Future Internet may be\ndefined in terms of the core constituents of today’s Internet and foreseen evolution, as outlined in\nSection 2.1. This further leads us to highlight core challenges and requirements posed upon the\ncomputing and networking environments, which in particular have to be faced by CHOReOS. Then,\nSection 2.2 more specifically concentrates on an early characterization of the Internet of Services\nand Smart Things that is focused upon within CHOReOS and that is further illustrated in Section 2.3\nusing one of the application scenarios that are targeted by CHOReOS, i.e., the Dynaroute use case.\n\n2.1. The Many Facets of the Future Internet\n\nBased on the broad and mostly informal definition of the Future Internet available in the literature, this\nsection provides an overview of the many facets that must be considered in the realization of the\nFuture Internet. Our presentation is independent of the more specific focus of CHOReOS so as to put\nour RTD work into the perspective of the overall Future Internet vision.\n\n2.1.1. Core Domains of the Future Internet\n\nBased on the Future Internet literature and in particular the one originating from the aforementioned\ninternational initiatives, the Future Internet, resulting from the evolution of today’s Internet, can be\ndefined as the union and cooperation of the Internet of Content, Internet of Services and Internet of\nThings, supported by an expanding network infrastructure foundation. Those core domains, elements\nof which we find already in today’s Internet, are not fully established yet and will emerge with the\nforeseen evolution of services, content, objects and networks as discussed in what follows.\n\n \n\nFP7-257178 CHOReOS 3",
    "Page_15": "Internet of Content\n\nToday, we can notice the following trends regarding the Internet of content, which are emerging to\nreshape the current Internet content and are paving the way towards the future. The first trend is\nsocial networking, supported by the use of Web 2.0, which led to the revolution of the Internet as a\npublishing medium to the Internet as a social environment [Lassila07]. Social networking is breaking\nboundaries in creating, representing and globally sharing information, and is providing new\npossibilities for human interactions. The second related trend is the shift of users from being\nconsumers to becoming “prosumers” of content, i.e., both producers and consumers [ETP09],\nthrough social Web sites such as Facebook, or multimedia Web sites such as YouTube. The third\ntrend is multi-media streaming, mostly in High Definition (HD). YouTube and Dailymotion are two\nexamples of the many Web sites providing online videos that users can watch in high quality. It is\nfurther worth noticing that CISCO analysis predicts that 4.2 out of 6.3 exabytes crossing the mobile\nnetwork per month will be due to video in 2015 [CISCO11]. 3D media is also expected to be a\nsignificant part of the Future Internet and is already being produced by large production companies.\nThe transition towards a 3D-enabled Internet should include 3D Web browsers, 3D virtualization of\nusers, and suitable intuitive interfaces for them to interact with each other, with information and with\n3D media [FMI10, Kortuem09, Toma09, Eurescom08]. Another important evolution resulting from\nmultimedia streaming, which is still at a relatively early stage, is the support of not only text-based\nsearch but also multi-media multi-model search over the Internet [F M110, Stuckmann09].\n\nThe above will lead to increasingly heterogeneous data to be shared over the Internet, given the\ndifferent formats of data to be produced by machines and users, and different formats resulting from\ncontent mashups [Schonwalder09].\n\nIt should further be noted that Web 3.0 technologies are expected to allow applications to perform\nintelligent processing of data and derive knowledge from information based on semantic tagging\n[ETP 09]. This evolution, along with the increasing number of Internet users (foreseen to reach 7\nbillion by 2020) [Blackman10], will be key factors in an unprecedented increase of the amount of\ncontent to exchange.\n\nOverall, the above trends shape the evolution towards the Internet of Content defined in [Daras09]\nas:\n\n“Any type and volume of media. Content may be pre-recorded, cached or live, static or\ndynamic, monolithic or modular. Content may be combined, mixed or aggregated to generate\nnew content and Media. It may vary from a few bits (e.g., the temperature that a sensor has\nmeasured) to interactive multi-media sessions and immersive complex and multi-dimensional\nvirtual/real worlds’ representations\".\n\nAs a result, the Internet of Content should support applications that do not only seamlessly provide,\nbut also process large quantities of information and support its propagation on both a local and a\nglobal-scale, while empowering more and more users to become prosumers of content. In fact, the\nInternet of Content provides location-independent access to objects and focuses on supporting\ninteractions related to creation, distribution, and management of content [eMobilityO7, ETP09]. The\nInternet of Content should support bulk data transfers, real time data transmission and seamless\ninformation delivery. In [FlArch11], the authors state that Schmidt, the CEO of Google, estimated the\nsize of information over the Internet to be 5 million Terabytes in 2005, of which Google had indexed\nonly 200 terabytes, i.e., only 0.004%. Considering further that Internet content is expected to\nincrease to 990 exabytes before 2012 [Theodore09], this illustrates the ultra-large scale envisioned\nfor the Future Internet.\n\nInternet of Services\n\nNowadays, service-oriented architectures are getting adopted to support the creation of services\nbased on distributed components, along with Semantic Web technologies used to enhance service\ndiscovery and composition. However, services are still used in isolation from each other, with small-\nscale service compositions only. No Internet-scale service composition or service-oriented computing\nhas been reached yet [ETPO09]. Nevertheless, significant advancements can be identified with\nrespect to the latter, mostly with the rise of Cloud computing, which aims at extending grid\ncomputing, distributed computing and parallel computing to provide resources at large as Internet\nservices based on the virtualization of resources [Zhang10]. As in the case of content, another trend\nis user empowerment, allowing users to become prosumers of services and allowing them to design\n\n \n\nFP7-257178 CHOReOS 4",
    "Page_16": "their own service orchestrations. This has been made possible by the emergence of service mashup\ntechnologies, semantic description languages and service creation platforms [Schonwalder09].\n\nIn general, the above are the developing areas that will shape the Internet of Services, which is\ndefined in [ETP 09] as:\n\n\"An umbrella term to describe several interacting phenomena that will shape the future of how\nservices are provided and operated on the Internet. The Internet of Services also comprises\nthe various sets of Internet Applications including pervasive/immersive/ambient,\nindustrial/manufacturing, vehicular/logistics, financial/ePayment/eBusiness, power network\ncontrol/eEnergy, eHealth, and eGovernment applications.”\n\nSummarizing, the Internet of Services is expected to support an exponentially increasing number of\ncontext-aware services, i.e., services that are aware of their environment, their surrounding or their\ncurrent situation. It will provide complex computation resources, and software functionalities as\nservices [ETP09]. The Internet of Services shall also allow users to create any type of business,\nregardless of its size and domain. It shall handle large-scale virtualization and dynamic composition\nof services as well [Eurescom08]. The resulting Internet will be highly heterogeneous, in part due to\nservice mashups along with the diversity of user-provided services and service application domains.\n\nInternet of Things\n\nSeveral physical things are already integrated in today’s Internet. RFID tags, tiny sensors, mobile\ndevices with embedded sensors and networked embedded devices are being largely produced and\nintegrated within the Internet. Still, the Internet currently mostly includes a collection of uniform\ndevices that will become increasingly heterogeneous as we move towards the future [Carnot11,\nCASAGRASO9, |OT08]. The Internet of Things is envisioned to include robots, smart buildings, smart\nfabric, smart books and so on, all designed to facilitate our daily lives [ETP09]. This implies a\ntransition towards an increasing number of intelligent objects producing large amounts of data.\nObjects will be heterogeneous, as they will have different functionalities, different application fields,\nand different technologies [CASAGRAS0O9]. The transition towards the Future Internet of Things will\nbe characterized by several technological evolutions: objects will evolve from connecting to\nnetworking to reach full intelligence; energy will shift from reduced consumption by low power\nchipsets to better batteries to reach energy harvesting capacities; devices will shift from small cheap\ntags and sensors to having better memories and sensing capacities at ultra-high speed and providing\nnew physical effects; usage will shift from RFIDs in certain domains to global applications to finally\nreach unified networks that connect people, things, services and integrate industries. The transition\nwill also be characterized by ground breaking technological advancements that will lead to nano-\npower processing units, wireless power, biodegradable devices and other advancements [IOT08].\n\nAs defined by the GASAGRAS? project [GASAGRAS09] that is part of the EC FP7 ICT initiative\ntowards the Future Internet, the Internet of Things is:\n\n“A global network infrastructure, linking physical and virtual objects through the exploitation of\ndata capture and communication capabilities. This infrastructure includes existing and\nevolving Internet and network developments. It will offer specific object-identification, sensor\nand connection capability as the basis for the development of independent cooperative\nservices and applications. These will be characterized by a high degree of autonomous data\ncapture, event transfer, network connectivity and interoperability.”\n\nIndeed, interconnected objects having each a unique way of identification and a capacity of\naddressing each other will characterize the Internet of Things. Objects shall have the capabilities to\nverify their identities, sense their environment, reason and learn, exchange and process information\naccording to predefined schemas [ETP09, Thompson05]. Technologies supporting object-to-object\ncommunication interfaces and real-time localization are expected to be widely used within the\nInternet of Things [Toma09, ETP09].\n\nThe overall Future Internet:\n\nAll the aforementioned components of the Future Internet, i.e., Internet of Content, Services and\nThings, will cooperate in order to fulfill the requirements of the Future Internet users. On the one\n\n3 CASAGRAS stands for “Coordination and Support Action for Global RDFID-related Activities and Standardization”\n\n \n\nFP7-257178 CHOReOS 5",
    "Page_17": "hand, services that are aware of their physical surrounding and real world objects that provide\nservices are expected to rise with the cooperation of the Internet of Services and the Internet of\nThings [Toma09]. On the other hand, the Internet of Content will cooperate with the Internet of\nServices and Things to provide users with content acquired through Services and/or Things.\n\n2.1.2.\n\nOn-going projects and research initiatives are thoroughly analysing the challenges and requirements\nof the Future Internet, as they constitute the key drivers for its design. Overall, the Future Internet is\nraising significant challenges over the computing and networking environments since it magnifies the\nfeatures of the already challenging today's Internet, as summarized in Table 1. The following in\nparticular surveys the main challenges posed by the Future Internet, i.e., scalability, heterogeneity,\nmobility, awareness & adaptability, and security, privacy & trust, which derive from the Future Internet\nconstituents discussed in the previous section.\n\nCross-domain Challenges of the Future Internet\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\nChallenges Today’s Internet Towards the Future Internet\n1 billion Personal Computers (20087), 1.78 billion Personal Computers (2013),\n647 million smartphones (2010) [CISCO11] 1.82 billion smartphones (20135)\n5 million terabytes of data (2005) [FlArch11] 990 exabytes of data (end of 2012)\ni [Theodore09]\nScalability [107 services (2007) [eMobility07] Billions of services [TF110]\n10 billion terminals (2010) [Hirabaru08] 100 billion terminals (2015) [Hirabaru08]\nConsumer Internet traffic of 12.684 Consumer Internet traffic of 42.070\nexabytes/month (2010) [CISCO10] exabytes/month (2014) [CISCO10]\nIslands of interconnected objects Internet-scale connection of highly\nheterogeneous objects (vehicles,\nsensors, mobiles devices, home\nappliances, etc.) [IOT08]\nEmergence of heterogeneous services provided Cloud computing enabling to provide\nHeterogeneity | on the Cloud such as Software as a Service (e.g., | everything as services, spanning\nGoogle apps) or Storage services (e.g., Amazon different business and technical domains\nservice) [Zhang10]\nService/content mashups leading to the provision | Global-scale services/content mashups\nof new, diverse services by prosumers creating new services/content with\ndifferent types and formats\nMostly (mobile) IP v4, which suffers from Global-scale mobile Internet that requires\nscalability issues etc.; even IP v6 has issues in revisiting communication/routing\nmobile situations (e.g., due to the use of home solutions [eMobility07]\nMobility agents/addresses) [ETP 09]\nWide-spread usage of smart mobile devices with | Global-scale usage of smarter mobile\nlimited resources (2 billion users) devices with ever-growing resource\nneeds\nAd hoc solutions to network, content & service Large scale content sharing, service\nadaptation provisioning, mobile connectivity that\n‘adaptability require autonomic adaptation and\nP therefore awareness of content,\nnetworks and services [ETP09]\nSecurity Safety and security requirements still an issue for | Integrating real world objects, more\nPrivacy & today’s Internet users, more information, more services\nTrust in the Internet intensifies the necessity\nfor safety and security solutions\n\n \n\n \n\n \n\n \n\nTable 1: The Future Internet Challenges\nScalable Internet\n\nBased on our survey of the Future Internet literature, we identify scalability to be the most critical\ncross-domain challenge for the Future Internet to overcome. Indeed, the Internets of Content,\nServices and Things will face scalability issues with the increasing number, size and quality of their\n\n* http://www.gartner.com/it/page.jsp? id=703807\n5 http://www.gartner.com/it/page.isp? id=1278413\n\n \n\n \n\nFP7-257178 CHOReOS 6",
    "Page_18": "networked entities, which is further exacerbated by the empowerment of users [ETPO9,\nStuckmann09]. For instance, an important challenge within the Internet of Things is to handle the\nlarge amount of information provided by things and then to provide useful services given this\ninformation [ETP 09]. We can also list the following challenges as part of the Future Internet's ultra-\nlarge scale:\n\ne Discovery and storage: The large amount and size of content and the large amount of data\nprovided by sensors will lead to higher storage requirements, in addition to challenges related\nto the discovery, search and retrieval of data [Toma09]. Similar challenges emerge for\nservices as the order of services available on the Internet is expected to increase from 10° to\nbillions in the future [eM obilityO7, TF110].\n\ne Processing and data streams: Another scale-related challenge is the processing of sensor\ndata streams and the in-network processing of sensor data in addition to seamlessly\nstreaming large amounts of multimedia data, probably 3D or high-quality data, which will be\nshared on the Future Internet [Stuckmann09, ETP09]. Dynamic composition of services will\nalso be challenging with billions of heterogeneous services expected to be available.\n\ne Naming, addressing, routing and cross-layer communication: As the number of systems and\napplications increases, the size of routing tables increases and efficient/stable/robust routing\nbecomes more challenging. Providing a routing infrastructure that can handle scalability, and\naddressing spaces that can handle the overload over IP addressing space is a challenge that\nshould be treated as high priority [ETP09]. The eMobility group argues that the IP v6 standard\nallowing the expansion of the address pool is not enough. It will also be a challenge to find a\nsolution for combining existing address schemes with the ones to be developed for the Future\nInternet [eMobilityO7]. Cross-layer communication is not systematically considered as a core\nrequirement by Future Internet projects. Nonetheless, its challenges should not be ignored, as\nthere is a need for a right cross-layer information delivery without raising scalability and\nsecurity issues [eMobility07, | ain06].\n\nHeterogeneous Internet\n\nThe Future Internet will be heterogeneous in many dimensions, starting from physical objects, to\nnetworks, services and content, which present a significant challenge for sustaining the Future\nInternet vision [ETP09]. Therefore, semantic technologies, shared standards and mediation\ncomponents are required to assure interoperability of heterogeneous components such as things,\nsensors, or networks over which content should be transferred without noticeable interruptions\n[Toma09].\n\nChallenges in sustaining composition/integration in the Future Internet are directly related to its\nheterogeneity. Indeed, the content composition challenge, which may be considered scale-related, is\nmainly due to the increasing formats and types of content shared over the Internet. Furthermore,\nservices and dynamic service compositions are expected to be increasingly heterogeneous with\ndifferent business landscapes and different service abstractions. The emergence of Cloud computing\nproviding diverse resources as services also contributes to increasing the heterogeneity of the\nInternet (e.g., with Software as service - Google apps; storage services - Amazon; etc.) [Zhang10].\n\nMobile Internet\n\nThe Internet was initially designed for fixed usage and mobility was the exception. However, this is no\nlonger the case. Indeed, it is foreseen that two out of three billion hosts connected to the Internet will\nbe mobile or other types of handheld devices by the end of 2011 [Stuckmann09]. Therefore, mobility\nshould be natively integrated in the design of the Future Internet. A challenge that will rise lies in the\ndesign of a transmission protocol for a mobile wireless world, decoupling the network and mobile host\nidentifiers from the TCP connection identifier [ETP 09].\n\nSurely, several mobility-related challenges should be addressed. Among those challenges lie:\nmanaging mobility of hosts, overcoming resource limitations (energy, processing power, etc.),\novercoming intermittent connectivity to cope with transmission loss and then reacting appropriately,\ndecoupling information from host and resolving the issues of Mobile IP (limited scalability) and IP v6 in\nmobile environments (e.g., due to the use of home agents/addresses). In fact, considerable efforts\nhave been made to overcome the resource limitation challenges. Suggested solutions include\nadopting stand-by modes and duty cycles to save energy, or using Cloud computing to save energy\n\n \n\nFP7-257178 CHOReOS 7",
    "Page_19": "of processing resources by uploading complex computations to the Cloud [Kumarl0]. To our\nknowledge, despite the attempts to solve most of the challenges above, no existing solution supports\nboth a fully mobile Internet that does not rely on fixed nodes and handle the anticipated ultra-large\nscale usage of mobile nodes. As an illustration of the foreseen scale, there were 647 million\nsmartphones in 2010 while it is expected to have 1.82 billion smartphones and phones equipped with\nWeb access by 2013°.\n\nAware and Adaptive Internet\n\nAwareness and related Adaptability are common requirements for sustaining the Future Internet, be it\nat the service, content or thing level. They are the source of several issues that should not be\nneglected. Challenges include: adapting the Web by and for users based on their context, adapting\nthe network performance to the characteristics of shared media and vice versa, providing\npersonalized content and media to users, providing context-aware dynamic services, and\npersonalization of services [ETP09, Stuckmann09, Toma09]. Further challenges associated with\nenabling an aware and adaptive Internet can be represented in terms of autonomous management.\nIndeed, management, as perceived by the Future Internet vision, falls within the “aware Internet’\nchallenge given that systems, networks, things and services in the Future Internet shall be able to\nself-manage (i.e., self-configure, self-heal, self-optimize and self-protect). Such a requirement is\nmostly due to the increasing number of services and underlying technologies that will increase\nnetwork complexity to levels where human management will become infeasible [eMobility07].\nChallenges further include: the management of virtual resources, cross-domain management,\norchestration and dynamic deployment of management functions, in addition to addressing and\nrouting information management [ETP09, Toma09]. Moreover, the rise of a global service delivery\nplatform highlights the necessity to determine whom and how to manage service delivery on a global-\nscale [Toma09].\n\nSafe Internet\n\nTrust, privacy and security are sensitive cross-domain issues that the current Internet is facing, and\nthese remain as sensitive challenges for the Future Internet. With the global-scale communications\nand exchange of information, users’ mobility and the limited resources their devices may have, the\nFuture Internet's “awareness” of users, their data, and their surroundings, it becomes more critical to\nfind appropriate solutions that will protect users. By protecting users, we mean preserving their\nprivacy, protecting them from attacks and ensuring that they can trust some service or person on\nanother side of the globe. Moreover, the current security mechanisms will be unfit in the mobile world\nwhere users access their Internet via devices with limited resources. Therefore, security should be\nintegrated in the architecture from the early design phases [eMobilityO7, ETP09]. As for privacy,\nauthors in [ETP09] distinguish between two privacy issues: data privacy (related to users’ private\ndata and information) and location privacy. Universal solutions shall be agreed upon to deal with the\nabove-mentioned issues. However, those solutions do not exist yet, especially when it comes to\npresenting and managing identity data. Some technologies have been proposed such as “generic\nidentifiers of electronic objects” or “real world object identifiers”. While those technologies do not\nprovide an overall approach to handle the identity issue, virtualization can be a potential solution to\nhandle a distributed management of identities [Toma09]. Further, appropriate governance and\npolicies definition constitute key enablers for a safe Future Internet.\n\nThe question “Who will govern the Future Internet?” represents the main challenge related to the\nFuture Internet’s governance. In fact, Governance is a cross-domain issue that requires not only\ntechnical but also legal and social involvements as well [Toma09, Stuckmann09, eMobility07].\nRegarding policy management, there is a need to develop a universal language for policy\nmanagement and digital licensing, in addition to a natural language to control devices [Kortuem10].\nMoreover, data receivers should be able to specify policies in order to have control over packets they\nreceive and the traffic coming their way [J ain06]. Overall, Future Internet systems should be self-\ngoverned and determine who has the right to take decisions, what policies to use and how to enforce\nthose policies [ETP09].\n\n6 http://www.gartner.com/it/page.jsp? id=1278413\n\n \n\nFP7-257178 CHOReOS 8",
    "Page_20": "2.1.3. CHOReOS Focus on the Future Internet of Services and (Smart) Things\n\nThe service-centric perspective of the Future Internet is acknowledged to play a paramount role\n[ETP09]. In fact, the Internet of Services will offer services for everyone and everything, across\nbusiness sectors and areas of life. This will be achieved through so-called “service delivery platforms”\nincluding service-oriented architectures, Web 2.0-style interaction, semantically enabled processing,\nbusiness models and deployment models.\n\nMoreover, the Future Internet will go beyond today's traditional boundaries of the virtual world by\nbeing linked to the real world, hence leading to the world of things and services. The Internet of\nThings, enabling new services to connect the real life to virtual environments, will grow gradually\nthrough deployment of new applications (e.g., RFID product tracing, NFC payment devices, e-\ndomestic appliances). As already discussed in the previous section and pointed out in [TFI10],\n“progressively, as more real-life elements become connected, new services are emerging (e.g.,\nmash-up applications), requiring appropriate levels of interface standardization and interoperability, of\ndynamic configuration capability, and an increase level of trust and associated information security\nsupporting person privacy”. In the context of the Internet of Things, the development of applications is\nexpected to come along with a new range of user-centric services, based on the interaction of day-to-\nday processes with the network. The delivery of those services will be commonly seamless for users,\nrequiring no specific interaction with them. The business model for the delivery of those services will\nrequire the interaction and collaboration of several organizations. Another challenge concerns also\nthe network infrastructure. In particular, because of the massive increase of new entry points into the\nnetwork, important aspects like scalability, communication protocols and middleware have to be\nproperly taken into account.\n\nIt is sustaining service composition in the envisioned world of Services and (Smart) Things that\nCHOReOS concentrates on. Regarding the latter, we focus more particularly on the networking of\nsmart resources including computing-enabled sensors & actuators and wireless computing devices\nsuch as smartphones, as opposed to merely passive, e.g., RFID-enabled, things. On the other hand,\nthe dimension of “Internet of Content”, with the exception of machine-produced data, which is an\nintegral part of the Internet of Things, is considered to be beyond the scope of CHOReOS, although\npossibly encompassed in the development of specific applications. Hence, by concentrating on\nenabling service composition in the Future Internet, CHOReOS investigates solutions at the\nmiddleware and above layers, following a service-oriented architecture perspective. As for lower-level\nlayers, the required evolution will be based on solutions developed elsewhere.\n\nCHOReOS shall then address the challenges listed in Section 2.1.2, which are associated with\nsustaining the Future Internet of Services and Smart Things in the specific context of service\nchoreographies, i.e.: extreme scalability, heterogeneity, mobility, awareness & adaptability, and trust,\nsecurity & privacy. The next section further refines the foreseen evolution of the Internet of Services\nand Smart Things, based on empirical studies about the evolution of service population and diversity\nthat have been published over the last 10 years.\n\n2.2. Evolution towards the Future Internet of Services and Smart Things\n\nThe growing richness of the Future Internet, concerning the services and smart things that will be\navailable for use, is certain. On the positive side, this richness implies the availability of a large\namount of design options that could be exploited by the developers of service-oriented software. On\nthe negative side, this growing richness implies a growing complexity for the tasks that should be\nperformed by the developers towards exploiting all these available design options, as well as for the\nruntime infrastructure.\n\nIn the remainder of this section, we attempt to characterize the growing plenitude of services and\nsmart things in the Future Internet. To this end, we exploit various empirical studies that have taken\nsnapshots of the available services in publicly accessible sources all over the Web [KIMR04, FANKO5,\nLILZLXS07, AL-MASRIMO8, SF09] and the Future Internet expectations documented in [ETP09].\nSpecifically, the empirical studies investigate the services that are available in standardized UDDI\nBusiness Registries (UBRs) [UDDI03]. Moreover, some of the studies that account for further types\nof sources for publishing services have also emerged recently, e.g., service portals or directories.\nThe gradually widening of the spectrum of service sources is an indicator of the increasing number of\nproviders that publish services, without adhering to the UDDI standard.\n\n \n\nFP7-257178 CHOReOS 9",
    "Page_21": "To characterize the plenitude of services and smart things in the Future Internet, we consider three\ndifferent aspects in what follows: their population, their complexity and their functional diversity.\n\n2.2.1. Population of Services & Smart Things\n\nRegarding the current Internet, a rough comparison of the numbers of retrieved services reported in\n[KIMR04, FANKO5, LILZLXS07, AL-MASRIMO8, SF09], shows a significant growth of the population\nof services that can be exploited by the developers of service-oriented software. This growth is even\nmore noticeable in the recent years as depicted in Figure 1. The reason for this growth is twofold.\nFirst, as the years go by, we have more services published by service providers. Second, as the\nyears go by, we have better search engines. In particular, all the studies apart from the latest two\nactually find a lower bound of the actual amount of available services. This is because they assume\nthat all services are registered in the widely known publicly accessible sources. However, in practice,\nthere are also services that are not registered in such sources and consequently, they are not traced\nby these studies. On the other hand, the latest two studies perform a more thorough crawling over\nthe Web.\n\n \n\n# of services\n\n \n\nYear of studies\n\n \n\nFigure 1: The Populations of Services observed from 2004 until now\n\nGetting into the details of the studies, the earliest one found about 1000 services that were available\non the Web in November 2003 [KIMR04]. Approximately, one year later, in J une 2004, 2432 Web\nservices were collected from all the widely known service sources of this period (Bindingpoint’,\nSalcentral®, Xmethod®, Webservicex”, Webservicelist”), revealing a noticeable 143% growth of the\nservices that can be exploited by developers [FANK05]. In December 2006, the number of services\nthat can be exploited by the developers keeps growing [LILZLXS07]. In particular, 3522 Web services\nwere found in the widely known service sources of this period (Bindingpoint, Xmethod, Strikeiron”,\nWoogle’?, Esynaps’*, Webservicex?) [LILZLXS07]. In October 2007, 5077 Web services were\nretrieved by crawling the Web using the Google and the Yahoo search engines, and querying UBRs\nand widely known portals (e.g., Webservicelist, RemoteMethods?®, wWSIndex?”, XMethods**) [AL-\nMASRIMO8]. Finally, from December 2009 until now, the Service-F inder?® portal provides information\nfor more than 27800 Web services. So, roughly from 2007 to 2009 [SF09], there is a significant 447%\ngrowth of the number of services that can be exploited towards the development of service-oriented\n\n7 www.bindingpoint.com\n\n5 www.salcentral.com\n\n° www.xmethod.com\n\n2° www.webservicex.com\n\n“ www.webservicelist.com\n” www.strikeiron.com\n\n3 www.cs.washington.edu/woogle\n4 www.esynaps.com\n\n5 www.webservicex.net\n\n6 www.remotemethods.com\n‘7 www.wsindex.org\n\n*8 www.xmethods.net\n\n*® www.service-finder.eu\n\n \n\nFP7-257178 CHOReOS 10",
    "Page_22": "software. Except for the development of new services, another interesting phenomenon is the\nupgrade of the already published ones. According to [LILZLXS07], the percentage of the upgraded\nservices reaches 100% for each year from 2003 to 2006. These elements show that providers\nrelease new versions of their services quite fast. These versions aim at satisfying even more\nrequirements covering a wider spectrum of consumers and business domains.\n\nConcerning the near future, the growth of the Internet of Services & Smart Things is expected to be\nmuch more impressive, primarily due to the availability of service-enabled things. As documented in\n[ETP09], from 2010 till 2015, the population of available service-enabled things shall grow from\nmillions to billions. Moreover, beyond 2015, the aforementioned population is expected to scale up to\ntrillions of service-enabled things.\n\n2.2.2. Complexity of Services & Smart Things\n\nCertain of the empirical studies that took place from 2004 until now investigate the complexity of the\nretrieved services. In more details, they perform a quantitative evaluation of the complexity based on\ntwo metrics:\n\n= The number of individual operations in a service (functions that the service offers to its\nconsumers);\n\n= The overall size of the service description.\n\nThe rationale behind these metrics is that services with many operations offer greater opportunities\nfor composing them. On the other hand, the service description size depends on the number of\nparameters for each operation, and the structure of the XML type [XMLO9] for each parameter.\nMoreover, the description size may increase because of the textual information inside the description\nthat explains the functionality of the operations.\n\nConcerning the first metric, on average, the number of service operations is 5.5 [FANK05,\nLILZLXS07]. However, the percentage of complex services (i.e., services with more than 20\noperations) is growing [FANK05, LILZLXS07].\n\nRegarding the second complexity metric, in 2004, the percentage of service descriptions with size\ngreater than 100Kbytes is 2.6% [FANK05]. In 2006, this percentage is 5% [LILZLXS07] whereas, one\nyear later, this percentage is 10% [AL-MASRIMO8].\n\nTherefore, we can conclude that developers may exploit not only more services, but also more\ncomplex services, that provide more operations and/or more complex data types. To this end, the\nassistance that is provided to them is not sufficient. This becomes evident from the quality of service\ndescriptions, which has been evaluated in [FANK05] and [LILZLXS07]. In particular, these two\nstudies evaluated the amount and the sufficiency of the textual information included in service\ndescriptions. The documentation within the service description provides a summary of the service\nfunctionality along with the meaning of each operation. In 2004, nearly 80% of the services have\ndocumentation of less than 50 words and almost half of the services do not have any documentation\n[FANKO5]. Two years later, in 2006, 67% of services have documentation of less than 50 words and\n27% of them do not have any documentation at all [LILZLXS07]. Hence, although there is a tendency\nfor better documenting services, it still seems that the providers are not very much concerned about\nthis issue.\n\nIn the future, the complexity of available services shall further increase. In particular, according to\n[ETP09], from 2010 till 2015, new services shall emerge, realized in terms of single domain\ncompositions of base-level services offered by service-enabled things, while, the expectations\nbeyond 2015 include even more advanced services composed of multi/cross-domain base-level\nservices provided by service-enabled things.\n\n2.2.3. Functional Diversity of Services and Smart Things\n\nThe evolution of the functional diversity of available services is investigated in [FANK05, LILZLXS07,\nSF09]. These works classify services according to their application domain. The different domains\nare organized roughly into 9 categories. A stimulating point is the evolution of service distribution into\nthe categories during the last years. In early years, the majority of services belonged to limited\ncategories. For instance, in 2006, 61.4% of services offered data lookup functionalities, 8.4% of the\nservices provided data conversion functionalities, 7.8% of the services offered development tools\nfunctionalities, and 7.6% of the services provided communication functionalities [LILZLXS 07]. On the\n\n \n\nFP7-257178 CHOReOS 11",
    "Page_23": "other hand, in 2009, according to the classification provided by the Service-Finder”® portal, 37% of\nthe services offered science-related (genetics and mathematics) functionalities, 27% of the services\nprovided multimedia functionalities and 17% of the services provided shopping functionalities. The\npopulation of the remaining top 6 categories ranges from 1% to 6% of the overall amount of services\nas depicted in Figure 2. Consequently, we observe that more services become available in multiple\ncategories showing a tendency towards a more uniform distribution of services into the categories\nthan that in 2006.\n\nHence, nowadays, the functionality of services varies in a greater extent than the early years\nindicating the proliferation of service development in more application domains.\n\n \n\n4\n1% 2% 2% 3%\n\n   \n\nm Travel\n\nB Utilities\n\n@ Product Information\n\nm Maps and Geography\n= Communications\n\n@ Value Manipulation\n\n= Shopping\n\n= Multimedia\n\n™ Science\n\n \n\n \n\nFigure 2: The Functional Diversity of Services in 2009\n\nConcerning the future, the diversity of available services is expected to further grow with the\navailability of service-enabled things that would facilitate the development of more complex service-\noriented software such as the social and enterprise applications that will emerge from 2010 to 2015,\nthe goal-oriented distributed things-to-things collaboration environments that will be available from\n2015 till 2020 and finally the intelligent things-to-humans collaboration environments that will emerge\nbeyond 2020 [ETP 09].\n\n2.2.4, Concluding Remarks\n\nAs surveyed above, the Internet of Services and Smart Things is becoming a reality with a population\nof services, including service-enabled things, called to evolve at a very fast pace. However, assisting\nthe developers in leveraging such a plenitude of services to provision new services through service\ncomposition raises tremendous challenges. Obviously, core challenges follow from the challenges\narising for the Future Internet discussed in Section 2.1. However, within CHOReOS, by focusing on\nsustaining the choreography of services composing the Future Internet, we are more specifically\nconcerned with addressing those challenges in relation with core building blocks of the service-\noriented architecture, i.e., service discovery, access and composition. In addition, we will investigate\nthose challenges in close relation with requirements from representative case studies, among which\nthe DynaR oute case study analysed in the next section.\n\n2.3. Future Internet Requirements from the DynaRoute Use Case\n\nCHOReOS investigates the challenges and requirements of the Future Internet both in a top-down,\nmostly based on the literature, and bottom-up fashion, based on concrete case studies. While the two\nprevious sections have concentrated on the top-down analysis, this section concentrates on the\nbottom-up one, focusing on one of the case studies to be experimented with within CHOReOS, ie.,\nthe DynaR oute use-case.\n\nThe DynaRoute use-case (see CHOReOS DoW-WP8) depicts a situation of a person following a\npredefined “itinerary” (i.e., a scheduled sequence of activities) on her way from her hotel to the\n\n?° http://demo.service-finder.eu/search\n\n \n\nFP7-257178 CHOReOS 12",
    "Page_24": "airport. The DynaRoute activities involve the dynamic synthesis and adaptation of choreographies,\nwhich are controlled and modified on-the-fly, based on external triggers and condition changes. In\nmore detail, the DynaRoute scenario involves the actors listed in Table 2 below, as part of the seven\nchoreographies summarized in Table 3.\n\n \n\nRo we O\n\n \n\n \n\n \n\nPeople Travellers, friend(s), taxi drivers, porters\nThings Taxis, navigators, monuments, airline companies\nServices Services for navigation, relaying traffic information, store (sales)\n\netc.\n\n \n\nannouncements, tour-guide, luggage transfer, departures timetable,\n\n \n\nTable 2: Actors of the DynaRoute Choreographies\n\nCee rele lel uN\n\nC1\nContext-aware\nadaptive itinerary\n\nChoreographed\nikea\n\nRelevant networked services\ndeployed (i) in the environment and\n(ii) on the users’ handhelds (e.g.,\nsmart phones)\n\nDescription\n\nComputes adaptive itinerary for users\naccording to their situation, their travel\nconstraints, and environment.\n\n \n\n \n\n \n\n \n\nc2 Customized networked services Tries to assign a subset of people\nCo-taxi-ing deployed (i) on the users’ waiting for taxis, to each available taxi.\nhandhelds and (ii) in taxis\nc3 Customized networked services (i) | Implements push-based communication\nDistributed alert | provided by the airline companies service between the airline companies\nsystem and (ii) deployed on the users’ and their customers.\nhandhelds\nc4 Socially-based networked services | Supports proximity-based social\nContext-aware, deployed on the users’ handhelds networking.\ndistributed\nad hoc social\nnetworking\nc5 Networked services (i) embedded Offers touristic services that are\nContext-aware, in the touristic area, and (ii) adapted to match the tourists’ interests\n\ntouristic guide\n\ndeployed on the users’ handhelds\n\nand travel status. For example, touristic\ninformation may take the form of a short\ntextual description, a longer video tour,\nor one full scale guided tour, depending\non the agenda of tourists.\n\n \n\n \n\n \n\n \n\n \n\ncé Traffic management services If a taxi identifies traffic jam or other\nContext-aware embedded in taxis problems (e.g., faulty traffic lights,\ndistributed, ad hoc accidents etc.), it can pass this\ntraffic information to other ‘nearby’ taxis. On a\nmanagement hop-by-hop basis the information is\npropagated to all, hence realizing a\nmulti-hop ad hoc mobile sensor network\n\ndedicated to traffic management\nc7 Customized networked services (i) | The porters at the airport are able to get\nContext-aware, offered by the airport and (ii) dynamically notified about the check-in\npersonalized deployed on the users’ handhelds | counter of the traveler, the baggage\nairport ground drop, or any other changes to the\n\nservice traveler's flight.\n\n \n\nTable 3: The DynaRoute Choreographies\n\n \n\nFP7-257178\n\nCHOReOS\n\n13",
    "Page_25": "Table 4 below summarises the DynaRoute Future Internet-related requirements, which represent a\nhigh-level overview of the specific requirements of DynaRoute in the context of the Future Internet\nchallenges highlighted in Section 2.1. The DynaRoute requirements will be further analysed and\nelaborated in Deliverable D8.1 to become full system requirements.\n\n‘DynaRoute’ Specific Requirements\n\nFuture Internet Challenges &\nUtes}\n\n \n\n \n\nScalability\n\nNumber, size and\nquality of\nnetworked entities\n\nC1 is a 1-to-many choreography, where ‘many’ is expected\nto be in the order of a few hundreds to thousands.\n\nC2 is between m taxis and n people where we expect the\nlevels of taxis to be around a few hundreds. This also hints\non the number of people awaiting taxi service, which,\nhowever, depends on time of the day.\n\nC3 is proportional to the number of passengers of an airline.\nThis can vary from a few tens to a few hundreds depending\non the number of flights to different destinations with the\nsame airline.\n\nC4 is limited by the geographical area. Assuming that in a\nhot spot area, there are numerous socially-related people,\nthis is at the levels of several tens.\n\nRegarding C5, the number of tourists at or nearby a\nmonument is about a few thousands.\n\nFor C6, the number of taxis, in a medium city, is of about a\nfew thousands (C5).\n\nAs for C7, the number of porters/passengers is in the order\nof hundreds.\n\nAccording to the above, the complexity of DynaRoute in\nterms of numbers of entities is relatively small at the Future\nInternet scale (a few thousands is the worst case).\nHowever, it is already challenging regarding the number of\nactors to be concurrently involved within a choreography.\n\n \n\nStorage (scale\nand size of\ncontent and\nsensors’ data)\n\nThe scale of data and their size for DynaRoute is\nproportional to the number of devices. As such, the\ninformation that needs to be kept and stored is not expected\nto be a major challenge, which fits CHOReOS as content\nmanagement in the Future Internet is not part of the project\nfocus.\n\n \n\nDiscovery (search\n& retrieval)\n\nSearch in DynaRoute is overall challenging. For example,\nmatching the various people in a certain geographical area,\nwho are socially related, under constraints of time and\nitineraries can be quite challenging.\n\n \n\nStreaming large\namounts of data\n\nIn DynaRoute, the biggest challenge in this respect is the\none in C5 where high capacity multimedia streams need to\nbe sent to different tourists, with different levels of Quality of\nService (QoS) supported by their devices, different\nlanguages, etc.\n\n \n\n \n\nAddressing and\nNaming\n\n \n\nAddressing is very much related to the naming of devices. If\nwe assume IPv6 and due to the relatively low level of\nDynaRoute requirements when it comes to number of\ndevices, it should suffice to cover the case study.\n\n \n\n \n\nFP7-257178\n\nCHOReOS 14",
    "Page_26": "Interoperability | Interoperability of | This is one of the biggest challenges and requirements from\nheterogeneous DynaR oute. Indeed, no one can expect that the devices in\ncomponents taxis, held by different people (travelers, porters, friends),\nand deployed at monuments, etc., will be the same and\nrunning matching protocols, from application down to\nnetwork layers.\n\nContent Dynamic content integration is not one of the most important\n\ncomposition & challenges for the DynaRoute case. C6 (information\n\nintegration exchange among taxis) is one of the choreographies of the\ncase study that will need such dynamic content integration.\nFor example, multiple views of the same (or similar)\nphenomenon from different taxis and the interpolation to a\nfinal assessment are going to be needed.\n\nDynamic service DynaRoute heavily relies on dynamic composition of\n\ncomposition services, as can be inferred from the description of\nchoreographies in Table 3.\n\nMobility Native Mobility is needed for almost all the DynaRoute\n\nsupport/integration | choreographies.\n\nof mobility\n\nRouting Routing is an open research issue for mobile sensor ad hoc\n\n(efficiency, networks. In particular, the highly dynamic ad hoc network\n\nstability, of taxis is raising a number of challenges.\n\nrobustness)\n\n \n\nLimited resource\nmobile devices\n\nSome devices, especially the mobile users’ devices have\nvery strong demands on resources and especially energy.\n\n \n\n \n\nAwareness &\nAdaptability\n\nAdaptability\n\nAdaptability is a major requirement for DynaRoute. For\ninstance, C1 needs to adapt to different circumstances and\ninteract with other choreographies.\n\n \n\nAwareness\n\nAwareness is also key to DynaRoute. Both context and self-\nawareness are needed.\n\nFor example, awareness of other devices, of other people,\nof weather conditions, of shopping hours, and of traffic jams,\nare all key to the DynaR oute case study.\n\n \n\nManageability\n(self *)\n\n* awareness,\nhealing,\noptimization,\nconfiguration,\nmaintenance\n\nAs mobility increases and as people rely more and more on\nsmart devices while being on the road and vulnerable, it is\nof paramount importance to have self-manageability, auto\nconfiguration, etc.\n\nIndeed, there will not be any IT support service for any of\nthe actors (with the exception of monument) during the\nDynaR oute case.\n\n \n\nMonitoring and\nmeasurement\n\nMonitoring of traffic, other devices, environment, etc. is of\nparamount importance to DynaRoute as many of the\nservices rely on monitored information.\n\n \n\n \n\nResilience against\naccidents\n&failures (fast\nrecovery,\nreliability, incident\ndetection and\nanalysis)\n\n \n\nResilience and recovery are major requirements for\nDynaRoute. When having to deal with time-sensitive\nservices and users being highly dependent on services, like\nDynaRoute does, resilience and fast recovery are\nconsidered essential.\n\nLevels of seconds should be considered as worst-case\nrecovery times.\n\n \n\n \n\nFP7-257178\n\nCHOReOS 15",
    "Page_27": "Security,\nPrivacy & Trust\n\nPrivacy of users’\ndata\n\nIn DynaRoute, there is a lot of private data (location,\nitinerary, habits, friends, destination, etc.) exchanged and\nbeing exposed. As the data privacy regulations in Europe\nare quite strict, this is considered a major challenge for\nDynaR oute.\n\nThe regulations of National DPAs”? and the directives and\nopinions of the EDPS” must be adhered to.\n\n \n\nProtect users from\nattacks\n\nThis is a less important aspect for DynaR oute. It all depends\non the level of the person(s) involved. If the people involved\nare heads of states or VIPs, then, indeed this can be a\nmajor requirement.\n\nBut as DynaRoute is targeting the average person, this can\nbe of a lesser importance.\n\n \n\nEnsure trust\nbetween services\n\nTrust is major concern for all interaction-based services.\nDynaR oute is based on trust relationships between humans,\n\n \n\nand people which then have to be transformed into trusted relations\nbetween devices as well.\n\nIdentity This is a major requirement. People should be able to be\n\nmanagementand | identified and given access to certain services only if they\n\npreservation are allowed to.\n\nFor example, it should not be possible to change the flight\narrangements of a certain passenger.\n\n \n\n \n\nGovernance and\npolicy\nmanagement\n\n \n\nDynaR oute requires a distributed governance structure.\n\n \n\nTable 4: The DynaRoute Requirements\n\nOur characterization of the Future Internet focusing on the Internet of Services and Things, as elicited\nin this chapter both in a top-down and bottom-up fashion, raises a considerable set of challenges for\nrelated system development targeted by CHOReOS. This calls for a precise and rich conceptual\nmodel, which will serve as foundation to the choreography-based Future Internet of Services and\nThings and especially to its supporting infrastructure. Before introducing the initial conceptual model\nfor CHOReOS in Chapter 4, we provide in the next chapter an overview of the NEXOF Reference\nArchitecture and embedded conceptual model, which will be used as a baseline for the definition of\nthe CHOReOS conceptual model.\n\n21 DPA: Data Protection Authority\n\n22 EDPS: European Data Protection Supervisor\n\n \n\nFP7-257178\n\nCHOReOS 16",
    "Page_28": "3. The NEXOF Reference Architecture\n\nAs already introduced, a conceptual model provides a high level common ground by capturing the\nrelevant entities/concepts, and relationships among them, underlying a given class of systems.\n\nFor CHOReOS, the considered class of systems consists of choreography-based service-oriented\nsystems in the Future Internet, and hence service-oriented systems realized as choreographies of\nservices discovered in ULS networking environments. The highly-scalable choreographies that\nCHOReOS wants to investigate, as part of Future Internet scenarios, need to be understood and\ntheir key characteristics need to be identified by taking into account the state of the art on conceptual\nmodels and languages for service-oriented systems at large and service-oriented choreography in\nparticular, in relation with the key features of the Future Internet.\n\nAs reported in [D1.1], a number of conceptual and architectural characterizations have been\nproposed in the literature for modeling/describing service-oriented systems: the Web Service\nArchitecture [BHMNO7], the CBDI Model [CBDI07], the OASIS Reference Model [OAS06], the EGA\nReference Model [EGA106,EGA206], the TrustCoM Conceptual Models [SWHAO5], the Service\nComponent Architecture [BBBE07], the Service-oriented architecture Modeling Language [SoaML],\nthe SeCSE Model [CDDD05,SeCSE] (to which the CHOReOS partner CITY contributed), and\nPLASTIC [PlasticWS ,Plastic08] (where the CHOReOS partners INRIA, CNR-ISTY, VTRIP, and UDA\nhad an involvement).\n\nThe most recent approach is the one adopted by the NEXOF Reference Architecture (NEXOF-RA)?3\nproject, which proposes a holistic approach that refines and enriches all the previous efforts in the\narea [SLC10]. Shortly, the NEXOF-RA project is the first step in the process of building the overall\nNESSI4 Open Service Framework (NEXOF), the generic open platform for creating and delivering\napplications enabling the creation of service based ecosystems where service providers and third\nparties easily collaborate. In particular, NEXOF-RA is a pattern-based reference architecture for SOA\ninfrastructures within the Future Internet and, as part of it, a conceptual model specifies the first-level\nentities that constitute these infrastructures, the facilities they provide in support of service-oriented\nsystems, as well as relationships among them.\n\nThe analysis of the NEXOF-RA has led us to conclude that it is a valuable work towards the\nestablishment of a common reference architecture, and its related conceptual model, of the\ninfrastructures supporting service-oriented systems in the Future Internet. However, the notions\noffered by NEXOF-RA do not address the specific facets of CHOReOS, and in particular do not\nconsider the choreography of services as a first-class entity to build service-oriented systems within\nthe Future Internet. Moreover, as indicated in Chapter 2, CHOReOS leverages the Internet of (Smart)\nThings domain, which is not currently considered by NEXOF-RA. Hence, in Chapter 4, by adopting\nthe way the NEXOF-RA conceptual model is structured and presented, we introduce new\nCHOReOS-specific notions and, when needed, we take care of making explicit relationships with\nthose already defined by NEXOF-RA. To this end, hereafter in this section, we provide an overview\nof the whole NEXOF-RA by showing figures borrowed from the official NEXOF-RA Web site and\ndocuments therein, so that the deliverable is self-contained.\n\n3.1. The NEXOF Reference Architecture in a Nutshell\n\nNEXOF-RA is “a set of instruments designed to help the construction of well-architected distributed\nSOA software infrastructures” within the Future Internet.\n\nSpecial emphasis must here be given to the term “SOA infrastructures”. According to the NEXOF-RA\nview, any software system can be divided into the infrastructure and the operative elements that can\nbe deployed on it (see left-hand side of Figure 3). From this standpoint, SOA introduces the notion of\ndistributed SOA infrastructures and service-oriented applications that can be deployed and executed\non it, in order to focus on business objectives. The rationale behind distinguishing between SOA\ninfrastructure and service-oriented applications on it is that “SOA is not a specific technology or\npredefined solution but rather a paradigm or architectural style that is used to improve the scalability\n\n23\n\noa http://www.nexof-ra.eu/\n\nhttp://www.nessi-europe.com/\n5 hittp://www.nessi-europe.com/?P age=open_innov\n\n \n\n \n\nFP7-257178 CHOReOS 17",
    "Page_29": "and decentralization within distributed, heterogeneous, cross-business-domains IT environments”.\nSpecific characteristics of a service-oriented system that will actually be deployed are likely to be\nunique within each business domain and company. Therefore, it is not feasible to define a “one-in-all”\nSOA solution that fits all situations, rather, a SOA solution needs to be adapted to each individual\ncontext. However, each SOA solution is characterized by the usage of technologies and platforms\n(and hence infrastructures) that specifically support, e.g., the creation, execution, and delivery of\nservices.\n\nService-oriented Systems\n\n   \n \n\nService-oriented\nApplications\n\nAny Software System\neS , (business objectives)\n\nil Operative\nelements\n* fsupponts .\nInfrastructure\n\nFigure 3: Organization Structure of Software Systems\n\n   \n  \n\nInfrastructure\n(operating environment)\n\nThus, the NEXOF-RA project team has chosen a domain- and technology-independent pattern-\nbased approach to model SOA infrastructures capable of supporting different types and demands of\nservice-oriented systems. As such, NEXOF-RA is in principle able to deal with often contradicting\nrequirements of heterogeneous classes of systems, e.g., Software as a Service, Cloud Computing,\nInternet of Services, Internet of Things, Web 2.0/3.0. In line with the well known idea underlying\narchitectural or design patterns, the NEXOF-RA pattern-based approach allows for deriving specific\ninfrastructure architectures for specific classes of systems by means of a set of patterns that can be\ncomposed according to specific requirements. NEXOF-RA considers a pattern as a first class design\nelement, which describes part of the infrastructure, detailing the pieces it is composed of, the role of\nthese pieces, and how they integrate and interoperate. A pattern also provides guidelines for\nimplementation.\n\nAs reported in [NEXOFRAS10], a set of patterns has been already developed for describing the\ncharacteristics of the following classes of service-oriented systems:\n\ne Enterprise SOA,\ne Internet of Services, and\ne Cloud and Infrastructure as a Service.\n\nThe NEXOF-RA project team claims that the Internet of Things can easily be integrated into the\nNEXOF-RA as a new system of patterns, and this is planned as future work. Such a future direction\nis of interest for CHOReOS since, as already said in Chapter 2, one of the main objectives of\nCHOReOS is contributing to leveraging the Future Internet of Services and Smart Things. In\nparticular, CHOReOS aims at offering an Integrated Development and Runtime Environment for\ndecentralized choreography-based service-oriented systems built out of constituents of the Internet of\nServices and Smart Things.\n\nAs pointed out in [SLC10], the specification of a pattern system is not “per se” sufficient to provide a\nvaluable reference architecture from which specific architectures can be derived. This is why, in\naddition to the pattern system, NEXOF-RA is composed of several parts that foster the instantiation\ninto specific architectures. Referring to Figure 4, the top-level parts are:\n\n(1) The Guidelines and Principles [NEXOFAFP 10],\n\n(2) The Reference Specification [NEXOFRAS10] containing the Pattern Ensemble, and\n\n(3) The Reference Model [NEXOFRM10], mainly containing the Conceptual Model,\nwhich we further define below.\n\n \n\nFP7-257178 CHOReOS 18",
    "Page_30": "NA =\n«\n\n| op-level Patterns XXX SOA YYY SOA 5B About:\n(system families) * construction principles\n7 * reference properties\nt + instantiation guidelines\n\nGuidelines\n\n|\n|\n|\nStandards Catalog } | and Principles\n~_— — E =\n\nConcrete Abstract\n(refers to ' iclass of Abstract\n\nproducts) ! products; Design Patterns Glossary\n\n \n\nPattern 3\n\n \n\nDesign Patterns | * information|\nConceptual\n\n\"\n\n' Model\nComponent Catalog\n{aka Building Blocks) y \\ Reference Model\n\n~_—— oe\n\nImplementation\n| P * functionality\n\nReference Specification\nReference Architecture\nFigure 4: Structure of the NEXOF Reference Architecture\n\n3.1.1, Guidelines and Principles\n\nGuidelines are used to instantiate a specific system architecture according to its requirements, e.g.,\nhelp on matching/selecting a certain pattern from a given requirements.\n\n \n\nPrinciples concern the development and evolution and are used to create and to evolve the NEXOF-\nRA specification, e.g., fix rules and restrictions, describe the structure of the patterns and how new\npatterns can be added, allowed relationships among patterns.\n\n3.1.2, Reference Specification\nThis part decomposes into the following sub-parts:\n\ne The Standards Catalog describes standards and specifications referred to in the NEXOF\nreference architecture.\n\ne The Component Catalog groups abstract descriptions of component products (e.g., a UDDI\nregistry) and specifies the links to concrete software components that implement them (e.g.,\nthe jUDDI library). Each description refers to the standards it implements, the concepts it\naddresses, as well as its behavioral characteristics.\n\ne The Pattern Ensemble describes patterns as first class design elements; they are called\nconstructional-patterns and can be used in the design of a system as any other design\nelement (class, module, component etc.). Patterns are organized according to three levels of\nabstractions:\n\n0 Top-level patterns are architectural patterns that describe the fundamental structural\norganization schema of SOA platform families (Enterprise SOA, Internet of Services,\nCloud and Infrastructure as a Service) in terms of predefined subsystems or\ncomponents.\n\no Abstract patterns are design patterns that refer to abstract components and provide a\nschema for refining the subsystems or components of a software system or the\nrelationship between them.\n\no Implementation patterns are low-level patterns that refer to at least one concrete\ncomponent specific to a technology: standard, programming language, product. They\n\n \n\nFP7-257178 CHOReOS 19",
    "Page_31": "describe how to implement particular aspects of components or the relationships\nbetween them using the features of a given technology.\n\nThe patterns can be further classified according to the following categories:\no Functional / Non-F unctional Patterns\n0 Cross-Cutting / Non-Cross-Cutting Patterns.\n\nA Functional Pattern specifies an architectural solution to a software system by mainly\nconsidering the functionalities it must provide.\n\nA Cross-Cutting Pattern can be either a functional pattern or a non-functional pattern that can\nbe applied to other patterns. It provides guidelines to transform and enhance the architectural\nsolution provided by another pattern. Thus, patterns that are not applicable to others are Non-\nCross-Cutting Patterns.\n\nA Non-Functional Pattern is a cross-cutting pattern that is designed to be applied to other\nspecific patterns in order to improve quality attributes.\n\nSince, understanding and using patterns individually does not help much, NEXOF-RA also specifies\nrelationships between all the patterns that are produced. Thus, for each pattern, the relationships\nwith other patterns are provided, so that the overall pattern system can be used to scale beyond point\nsolutions, and thus to address larger and more sophisticated problem spaces [NE XOFAFP10].\n\n3.1.3. Reference Model\n\nThe NEXOF-RA Reference Model defines the first-level entities that constitute the infrastructures\nunderpinning heterogeneous service-oriented systems, as well as the relationships between them,\nand can be used to conceptually describe different system views by following the well-known\napproach of separating structure, behavior and functionality. The Reference Model part comprises\nthe Glossary and the Conceptual Model.\n\nanalysis\n\nmessaging\n\nresources\nFigure 5: NEXOF-RA Concerns\n\nThe glossary contains NEXOF-RA-specific and Not-NEXOF-RA-specific terms. The NEXOF-RA-\nspecific terms include all key terms for the NEXOF-RA scope and are organized according to the\nNEXOF-RA layered concerns (see Figure 5), where we find from the top to the bottom:\n\nPresentation concern: deals with the incorporation of people into the SOA equation,\nAnalysis concern: deals with continuous process improvement,\n\nComposition concern: deals with the integration of services into business processes,\nDiscovery concern: deals with reuse,\n\nMessaging concern: deals with communication and interaction with services,\nServices concern: addresses the underlying building blocks of SOA\n\nResources concern: deals with SOA enactment.\n\nWe further identify the following NE XOF-RA orthogonal concerns:\n\ne Management concern: deals with service level agreement and governance\ne Security concern: deals with SOA reliability.\n\n \n\nFP7-257178 CHOReOS 20",
    "Page_32": "Since the overall NEXOF-RA is structured around the above nine concerns, the specification of the\nconceptual model is organized accordingly.\n\n3.1.4. Reference Model vs Reference Specification\n\nThe Reference Model (and hence the Conceptual Model as part of it) plays a decisive role within the\ncreation/evolution of the NEXOF-RA specifications itself as well as in the instantiation of NEXOF-\ncompliant architectures. According to Figure 6, while the Reference Model specifies what are the\nfacilities provided by any NEXOF-compliant infrastructure in support of the achievement of service-\noriented systems business objectives, the Reference Specification describes how these facilities can\nbe provided.\n\n \n\n \n\nReference Model Reference Specification\nWHAT facilities are needed to support HOW supporting facilities are provided\nService-oriented Systems in reaching by SOA infrastructures\n\nbusiness objectives\nGl Conceptual Standards Component Pattern\nween) Model Catalo, Catalo; Ensemble\nFigure 6: NEXOF-RA Reference Model vs NEXOF-RA Reference Specification\n\nMore specifically, within the Reference Specification, Patterns are designed for fulfilling the\nfunctionalities formalized by the Conceptual Model and are indirectly related to service-oriented\nsystems’ business requirements (see Figure 7). The Conceptual Model addresses and covers all the\nfunctionalities of a generic service-oriented system infrastructure platform. According to the\nobjectives of a specific Business Scenario, (part of) these functionalities will be provided. Moreover,\npatterns are also designed to fulfil the Non-Functional System Requirements of such a service\nplatform derived from the business scenario. Finally, patterns are validated by Proof Of Concepts\n(POCs). A POC is defined as a (set of) software artefact(s) used to validate some key patterns of the\nReference Specification. In particular, the main focus of a POC is on the validation of patterns’ claim\nabout quality attributes.\n\nEa — a a\n\nderived_from\n\ndesigned_to_fulfill is_a_design_for\nF PATTERNS —— =\n\nvalidates\n\n \n\n \n\n \n\nProof-of\n\nConcept\n\n \n\nFigure 7: Relationships among Business Requirements, Conceptual Model, Architectural\nPatterns, and Proof-Of-Concept\n\nWithin the NEOXF project, quality aspects (such as high availability and scalability of SOA\ninfrastructures) are not explicitly addressed in the NEXOF-RA conceptual model. In fact, according to\nthe vision of the NEXOF-RA project team, quality attributes are inherent characteristics of specific\narchitectural solutions and can be ensured by (composition of) different architectural patterns. Hence,\nthey cannot be expressed on a conceptual level independently from specific solution aspects. Thatis,\nfor each pattern, the NEXOF-RA specifies the influence that the usage of the pattern has on quality\nattributes.\n\nThe next section presents an overview of the NEXOF-RA composition concern that CHOReOS\nextends to provide a characterization of service choreographies. Moreover, as presented in Chapter\n4), the CHOReOS conceptual model is called to extend all the NEXOF-RA concerns to address the\nspecifics of Future Internet Choreographies.\n\n \n\nFP7-257178 CHOReOS 21",
    "Page_33": "3.2.Overview of the Composition Concern\n\nAs said, the NEXOF-RA conceptual model describes each concern by following the well-known\napproach of separating functionality, structure, and behavior. Functionalities are defined by use case\ndiagrams, the structure is defined by class diagrams, and the behavior is defined by activity diagrams\n(data flows in the NEXOF-RA terminology). In particular, each functionality is described in detail in\n[NEXOFRM10] together with explicit dependencies with the system requirements and references to\ntheir sources (e.g., NEXOF-RA Investigation Team, Products, Standards, Books).\n\nAs an example, Figure 8 reports all the (Sub)functionalities of the Composition concern. In particular,\nservice-oriented infrastructures should support the Creation and Execution of composition of\npublished services components. The creation encompasses the Design and Implementation of the\ncomposition process being specified. The composition process can be in turn published (i.e.,\npromoted) as a composite service.\n\n<<Composition>>\n\n<<include>>\n\nService\nDeveloper <<include>>\n\n<<include>>\n\n \n\nFigure 8: Functionalities of the Composition concern\n\nThe structure and the behavior views (i.e., the data flow) of the composition concern are shown in\nFigure 9 and Figure 10, respectively. Figure 9 and Figure 10 can be easily understood and they are\nbriefly described here just to let the reader grasp the way the NEXOF-RA concerns are presented.\nStill, interested readers are referred to [NEXOFRM10] for more details.\n\nA Service Composition is described by a Service Composition Description, i.e., either an\nOrchestration or a Choreography (see Figure 9). Based on existing Service Descriptions, the\nservice composition description specifies the Data Flow and the Control Flow of the service\ncomposition. Implemented by an Executable Workflow, a service composition can also be exposed\nas a Composite Service, in turn implemented by a Composite Service Component.\n\nThe composition concern addresses the functionalities Creation of Service Compositions and\nExecution of Service Composition, which together allow handling service compositions (see Figure\n10). Considering the requirements the composition has to fulfill and the descriptions of the required\nservices discovered into the registry, developers can create (i.e., design and implement) service\ncompositions and execute them. The implementation of a service composition leads to the creation of\na Composite Service Component that, after being deployed, can be run to actually execute the\ncreated service composition. The Execution of Service Compositions is performed in the form ofa\nExecutable Workflow upon the event of dispatching a message that starts the invocation of the\ncomposition. The executable workflow is processed by giving place to a series of Observable\nActions for the different services that are invoked within the process execution.\n\n \n\nFP7-257178 CHOReOS 22",
    "Page_34": "DP capsules\n\n   \n\n \n\n \n\n \n\nimplements > <@ describes\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\nService <I Composite\nComponent Service\npublished as p>\nService\nControl Flow Data Flow Besonnion\na Service\nree Composition\ndescribed by > Description\na A\nimplements\nExecutable =\n> Workflow Orchestration Choreography\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\nFigure 9: Structure View of the Composition concern\n\n  \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n|\ni Requirement i\ni Composite !\no>] Service i\nComponent i\nL. >| Service i\nDescription j\nExecutable i\nWorkflow i\ni\nMossape Service i\nN Component eve\n[dispatched] {running}\nObservable\nAction\n\n \n\n \n\n \n\n \n\n \n\nFigure 10: Data flow of the Composition concern\n\nAs already anticipated, in the next chapter we describe the extensions to the NEXOF-RA conceptual\nmodel. In particular, we extend the composition concern by detailing the concept of Choreography.\n\n \n\nFP7-257178 CHOReOS 23",
    "Page_35": "4, Initial Version of the CHOReOS Conceptual Model\n\nAs described in the CHOReOS DOW, one of the main goals of CHOReOS is to realize in WP5 an\nIntegrated Development and Run-time Environment (IDRE) that, integrating the outcomes of the\nWP 2-3-4 RTD work, constitutes a software infrastructure able to support, from development to (and\nduring) run-time, choreography-based services in the Future Internet. As depicted in Figure 11, the\nCHOReOS Conceptual Model shall then highlight the key facilities to be supported by the CHOReOS\nIDRE Architecture.\n\n \n\nCHOReOS Conceptual Model CHOReOS IDRE Architecture\nWHAT supporting facilities are needed to HOW supporting facilities are provided by\nreach business objectives by means of the CHOReOS infrastructure\n\nservice choreographies\n\n \n\nFigure 11: CHOReOS Conceptual Model vs CHOReOS IDRE Architecture\n\nMore precisely, independently from any implementation and technological details, the CHOReOS\nconceptual model describes on a conceptual level what are the facilities offered by the CHOReOS\ninfrastructure, which are needed to support the achievement of business objectives by means of\nservice choreographies. The CHOReOS IDRE architecture then specifies how the given facilities are\nprovided by the CHOReOS infrastructure and hence by the IDRE.\n\nNote that the relationship highlighted in Figure 6 for NEXOF-RA and the relationship in Figure 11 for\nCHOReOS must be considered at different levels of abstraction and generality. In fact, while the\nNEXOF conceptual model and the NEXOF reference architecture concern supporting facilities for\ngeneral service-oriented systems, the CHOReOS conceptual model and the CHOReOS IDRE\narchitecture concern supporting facilities for the class of service-oriented systems realized as\nchoreographies of services. Moreover, the NEXOF reference architecture is an abstract specification\nthat can be used as a reference for architecting specific and concrete SOA infrastructures; whereas,\nthe CHOReOS IDRE architecture is per se a concrete specification of the SOA infrastructure offered\nby CHOReOS for supporting the design, development, enactment, and validation of choreography-\nbased large scale services in the Future Internet, i.e., “CHOReOS choreographies”.\n\nOverall, the definition of the CHOReOS conceptual model is strongly related to the activities defined\nin the CHOReOS Development Process Model, which is introduced in the CHOReOS DOW and\nsketched in Figure 12. These activities decompose into:\n\ne First, as depicted in Figure 12, CHOReOS intends to support the systematic development of\nchoreographies from their design to their actual enactment, i.e., execution. CHOReOS in\nparticular investigates techniques and tools that emerge from MDE and generative\nprogramming research areas, and makes use of two orthogonal transformational approaches:\n(i) a top-down transformation process and (ii) a cross-cutting transformation process. The\nformer will serve to refine the i*-based domain-expert requirements specification into analysis-\ntechnique-specific models derived from a peer-style specification. The latter will serve to\nintegrate the different modeling/reasoning technologies by passing from a technique-specific\nmodel to a different technique-specific model. This will bridge the gap between the various\nmodels that have to be used for choreography synthesis, analysis, validation, and\nimplementation purposes.\n\ne A distributed (large scale) service base (aka registry) will further manage information about\navailable services offered by service providers. As deeply discussed in [D1.1], the service\nbase organizes available services into functional and non-functional views. Each view is\ncharacterized by corresponding abstractions (functional/non-functional) and a set of available\nservices that are represented by each abstraction.\n\ne The approach envisioned for the choreography synthesis then starts from (i) the peer-style\nspecification of the choreography and from (ii) the set of services discovered from the large\nscale service base. Input (i) is based on the functional and non-functional abstractions, and it\ncomes from the refinement of the domain expert specification obtained by means of the top-\ndown transformational process. Input (ii) comes from the exploitation of the service base\n\n \n\nFP7-257178 CHOReOS 24",
    "Page_36": "management mechanisms. That is, the synthesis process assumes that the services into the\nregistry/base have been discovered so that they satisfy the local (to the service) functional\nand non-functional requirements that have been specified for the choreography and, hence,\ncan be considered as potential candidates to participate in the global choreography process.\nThe choreography synthesis produces (possibly with partial human intervention/inspection)\nthe abstract proxies/adaptors that, supported by the CHOReOS service-oriented middleware\nto be developed in WP3, distributedly support the enactment of choreographies.\n\n \n\nFigure 12: The CHOReOS Development Process Model\n\nThe comprehensive and perpetual process extends to run-time and does support domain\nexpert developers and (end-)users in all the phases of the choreography life cycle. Such a\nprocess has to explicitly account for complex analysis and validation steps at run-time when\nall the necessary pieces of information are available. In other words, some activities of the\nprocess may be executed at run-time, as specific internal capabilities of the choreography\nengineered through the process itself. Furthermore, the process unifies the developer and\nuser roles by considering the user as taking an active part in the process that controls and\naffects the choreography development and its overall behavior.\n\nIn the following, we present the CHOReOS initial conceptual model by separating functionality,\nstructure, and behavior views. Figure 13 shows an overview of the CHOReOS concerns by\nhighlighting the NEXOF-RA ones that have been extended (see the label extended), and the ones\nthat have been left as they are at the current stage of the project (see the label as itis).\n\n \n\nFP7-257178 CHOReOS 25",
    "Page_37": "(as it is)\n\n3h\na\ng\nx\nxz\n\nsecurity\n\nw\nc\no\n£\n©.\nbo\no\nc\no\n£\n\nmessaging\n(extended)\n\nresources\n\n(as it is)\n\n \n\n \n\nFigure 13: Current situation of the CHOReOS Concerns with respect to the NEXOF-RA\nConcerns\n\n4.1.Composition Concern\n\nWithin the Composition concern (see Section 3.2), NEXOF-RA considers the concepts of\nOrchestration and Choreography as simple specializations of a service composition. Despite the\nemerging importance of the concept of choreography in the context of the Future Internet, NEXOF-\nRA just mentions choreography, rather than providing a clear and detailed definition.\n\nAs motivated in [D1.1], in the last few years, building upon the wide acceptance of the service-\noriented architecture paradigm, there is a growing interest in choreography as a key concern in\nforming complex service-oriented systems. Choreography is put forward as a generic abstraction of\nany possible collaboration among multiple services, and integrates previously established views on\nservice composition, among which service orchestration. In principle, any possible view on\ncollaboration and previously established view on composition among multiple services (e.g., service\norchestration) can be abstracted as a choreography. Three often overlapping viewpoints and related\nterminologies can be distinguished [DD04, BDOO6]: (1) Choreography captures collaborative\nprocesses involving multiple services and their interactions from a global perspective; (2) Behavioral\ninterface (See Service Behavioral Model in Figure 12) captures the behavior of a single service that\nparticipates in the choreography (i.e., the signature and the interaction protocol with the environment\nthat the service supports); and (3) Orchestration deals with the description of the interactions in which\na set of services can be engaged, as well as the internal steps between these interactions.\n\nThe above considerations have led us to extend the Composition concern of NEXOF-RA to address\nthe peculiarities of choreographies and their distinctive features that are not currently covered by\nNEXOF-RA (see Figure 14 that shows only the new/refined functionalities). According to Figure 14, a\nChoreography Designer should have the possibility to specify a service choreography with respect\nto the Goal and Requirement Specifications provided by the Domain Expert and Consumers.\nThe Creation of a Service Choreography encompasses its specification, and its implementation.\nThe implementation of a service choreography includes the synthesis of proxies/adaptors for\nsuitably coordinating the involved services. Finally, the Operator has the responsibility of enabling\nthe execution of the created choreography, which can then be enacted by the consumer as needed.\n\nIn the sequel, the proposed extensions will be detailed by showing the structure of the provided\nextensions of the composition concern (Section 4.1.1), and the data flows of the proposed\nfunctionalities (Section 4.1.2).\n\n \n\nFP7-257178 CHOReOS 26",
    "Page_38": "Composition\n\n \n  \n\nSpecification of ~\nService\nChoreography\n\n  \n    \n \n        \n \n   \n \n\nGoal and\nRequirement\nSpecification\n\n \n\nChoreography Designer\n\n  \n\n«includes -—\n\nDomain Expert\n\neoeeuon of «include» ‘Choreography oa\nChoreography neation Choreography Developer\n\n<\n~ «extends\nx\n\n \n\nkinclude»\n\nConsumer _\nSynthesis of ~\nService\nChoreography\n\nEnactment and\nExecution of\nService\nChoreography\n\n  \n\nOperator\n«extend»\n\n~\n\nFigure 14: New functionalities in the refined Composition Concern\n4.1.1, Structure View\n\nFigure 15 shows the structure view of the composition concern showing only the extensions related\nto the Choreography concept. A Choreography, as described by a Choreography Model\n(specializing the Composition Model), is related to (i) the ability to model business contracts, i.e.,\nConversations in terms of a set of Messages which can be exchanged (possibly according to a\nMessage Exchange Pattern) among multiple Participants and (ii) how a business contract is\n“enforced” with respect to the individual Behavioral Model of participants. The Behavioral Model\ndefines the interaction behavior in terms of allowed sequence of Messages.\n\n \n\n \n\n        \n \n\n \n\n   \n\njunicationNetwork ageExchangePattern\n\n+follows |0..1\n\n   \n \n \n\nCho\n\nChoreography Model (describes\n\n     \n \n\n+describedBy\n\n \n\n_— —\n\nFigure 15: Structure View of the Composition Concern\n\nTo summarize, a choreography specifies how messages are exchanged among participants in a\nglobal conversation. Thus, the focus is not on orchestrating the work performed within each\nparticipant, but rather on the external exchange of information (messages) between these\nparticipants.\n\n4.1.2. Data Flow\n\nBuilding upon the previous discussion, a choreography can be seen as a collaborative process\namong interacting participants. The message exchange globally defined by the choreography has to\nbe projected among different participants according to the “local” roles (in a peer-style fashion) they\nplay to fulfill the global choreography. In the following, the functionalities Specification of Service\nChoreography, Goal and Requirement Specification, Synthesis of Service Choreography, and\nEnactment and Execution of Service Choreography are described. The Discovery of Service is\ndescribed in Section 4.4.\n\n \n\nFP7-257178 CHOReOS 27",
    "Page_39": "Specification of Service Choreography\n\nAccording to Figure 16, the Specification of Service Choreography takes as input Choreography\nPatterns as derived by the specification of the choreography goal and requirements defined by\ndomain experts and refined by consumers (see Figure 17). Then, the service choreography\nspecification process produces a Choreography Model (named domain expert choreography model\nin Figure 12). Such a model is taken as input by a service choreography synthesizer together with\nService Descriptions. The latter describes the services that can be potentially used to realize the\nchoreography. These services have been discovered from the Service Base(s) (see Section 4.4)\nwith respect to the specification given in the Choreography Model. As further detailed in the\nfollowing, the output of the service choreography synthesis is a set of Proxies/Adaptors which are\ngenerated to distributedly support choreography enactment, and hence for enabling the\nchoreography realization. In the overall process, MDE techniques in terms of model transformations\nand generative techniques can help the management of some FI characteristics like its ultra-large\nscale. Moreover, to make the synthesis approach scalable and, hence, to address the large scale\nsize of the Fl compositional reasoning techniques can be adopted for reducing the state explosion\nproblem which typically affects synthesis processes.\n\nGoal and\nRequirements\nSpecification\n=S.\nChoreography Patterns\n\nNY\nSpecification of\nService Service Base\nChoreography\n=\n\n«Discovery»\nDiscovery of\nService\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n \n  \n\n  \n\n \n\nChoreography Model\n\n    \n\n \n\n \n\n| Synthesis of Service W\nChoreography — Service Descriptions\n\nProxies/Adaptors\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n( Enactment and\nExecution of\nService\nChoreography\n\n&\n\nFigure 16: Data Flow in the Composition Concern\n\n \n   \n \n\n \n\n  \n  \n\nGoal and Requirements Specification\n\nRequirements are expressed by Domain Experts (domain specific requirements) and Consumers\n(user needs) using a structured approach that includes qualitative qualifiers, satisfaction ratings and\nprioritization (See Figure 17). The domain expert oversees the process, receiving the consumer\nrequirements, either directly or indirectly through the Evolving Requirements Specification. The\nresulting set of prioritized quality-based requirements is then associated with choreography\nstrategies, which are expressed in the forms of patterns.\n\nThe service choreography patterns encapsulate different complex choreography decisions made in\nthe presence of user requirements. Each provides a structure for associating user requirements with\n\n \n\nFP7-257178 CHOReOS 28",
    "Page_40": "different possible choreographies of classes of services (i.e., groups of similar services see Section\nDiscovery Concern4.4) that, when implemented, deliver service-oriented applications with different\nqualities. Each pattern considers the qualities of the services to be invoked, the qualities that different\nchoreographies offer and how, when combined, these service and choreography qualities deliver\nsystems of different qualities. Users of CHOReOS solutions will match their user requirements to the\nservice choreography patterns that will inform more detailed choreography design.\n\nThe goal and requirement specification techniques will support scalability, as testified by the adoption\nof i* [YMY94,FG09], which has previously been applied to model large-scale systems [MLRO7]. As\ndiscussed in Section 5, we can draw on this modeling experience to ensure scalability of CHOReOS\nsolutions.\n\n \n \n   \n\n \n\n( Domain Expert Consumer\nSpecification of = Specification of\n| Requirements \\ Requirements\n\n \n\nEvolving Requirements Specification\n\n \n\n \n\n \n\nRetrieve\nService\nChoreography\n\n \n\nPatterns\n\n \n\n \n\nChoreography Patterns\n\n \n\n \n\n \n\nFigure 17: Functionality - Goal and Requirements Specification of the Composition Concern\n\nSynthesis of Service Choreography\n\nThe synthesis of service choreography concerns the realization of distributed proxies/adaptors that,\nsupported by the CHOReOS middleware, cooperatively work to support the enactment of the\nchoreography.\n\nBy relying on suitable mechanisms such as the ones proposed by INRIA and UOI to organize\nhierarchically the vast amount of available services [AZI09b] within the service base, and by\nconsidering the coordinator synthesis approach described in [TII08] as baseline, Model-to-Model\nTransformation techniques [MHZ06, HMY 06] will be introduced to refine the Choreography Model\ntogether with the service Behavioral Models into a Peer-style Specification (see Figure 18).\nService Behavioral Models are obtained by the Synthesis of Behavior Protocol activity starting\nfrom the descriptions of services that have been discovered within the Service Base (see Section\n4.4). We will build on the approach described in [BIPT09] for deriving such behavioral models.\n\nThe synthesis process must be able to understand how to actually coordinate the discovered\nservices to suitably realize the specified choreography. For instance, it might be the case that the\ndiscovered services, although potentially suitable in isolation, when interacting together can lead to,\ne.g., Concurrency and interaction mismatches such as deadlocks, or safety and timeliness violations.\nThus, although a given set of services, if coordinated in the right way, can be used to achieve the\nspecified choreography, they can completely miss the choreography's goal if coordinated in a\ndifferent way.\n\nFurther applying Model-to-Model Transformation, the synthesis method will produce (possibly with\npartial human intervention/inspection) abstract proxy/adaptor models. Such models, accounting for\nservice functional and non-functional abstractions, force the collaboration of the discovered services\nto guarantee the specified choreography. To actually realize the choreography, the abstract\nproxy/adaptor models are then concretized into actual software artifacts by means of Model-to-Code\nTransformations. The generated proxies/adaptors are deployed (see Figure 12 and Figure 19) on\n\nFP7-257178 CHOReOS 29",
    "Page_41": "the CHOReOS choreography engine and, by means of the CHOReOS service-oriented middleware,\nthey suitably access and coordinate the discovered services.\n\nChoreography Model\n\nModel-to-Model »\n\n    \n     \n \n\n \n\nService Descriptions\n\nSynthesis of\n\n \n\n> Transformation ~ Behavior\nProtocols\n\n \n\nPeer-style Specification Behavioral Models\n\n \n\n \n\n \n\nModel-to-Model\nTransformation\n\n \n\nVy\nSynthesized Service\nProxy/Adaptor Models\n\n \n\n \n\n \n\nModel-to-Code ~\nTransformation\n=...\n\nProxies/Adaptors\n©\n\nFigure 18: Functionality - Synthesis of the Composition Concern\n\n \n\nEnactment and Execution of Service Choreograph\n\n \n\nServices Proxies/Adaptators are deployed in the execution environment providing services (see\nFigure 19). Meanwhile, a Subscription activity is triggered in order to set Probes on the deployed\nservices. Probes enable the monitoring of running services and the control of their runtime\nperformances. Runtime V&V Model results form the analysis activity that is realized From Design\nTime to Runtime. These models can then be considered in order to operate Runtime Enforcement\nand V&V governance on services and probes. In order to enable services collaborations,\ngovernance and V&V rules need to be respected.\n\n \n\nFP7-257178 CHOReOS 30",
    "Page_42": "Deployment ;\n\n \n \n\n \n \n  \n     \n\n \n\nProxies/Adaptators | _~\n\nieecription\n\n_{From Design to |\n“ runtime\nanalysis\n\n \n\n \n\n \n\nRuntime )\nEnforcement\nand V&V\n\n“| Runtime V&V Models\ngovernance\n\nFigure 19: Functionality - Enactment of the Composition Concern\n4.2.Presentation Concern\n\nThe Presentation concern of NEXOF-RA addresses all mechanisms to enable human users to\ninteract and make use of the functionalities provided by the overall service infrastructure. It aims at\nsupporting developers to work in a highly personalized environment to assemble composite end-user\napplications from a set of uniform building blocks. This concern strictly relates to the CHOReOS\nIDRE that will be developed in WP5 whose requirements are elicited in [D5.1]. We then intend to\nextend/refine the presentation concern with respect to the experiences gained in WP5.\n\n  \n    \n\n4.3.Analysis Concern\n\nThe Analysis concern has been considered by NEXOF-RA as one of the important aspects that need\nto be investigated to derive a complete classification of SOA for Future Internet concepts.\nNevertheless, due to the prioritization of research activities in the NEXOF-RA project, the concern\nhas not been developed further. Such an aspect will be, on the other hand, deeply investigated within\nCHOReOS, in particular as a result of the activities that will be carried on within WP4, which is in\nlarge part devoted to Verification & Validation (V&V) aspects.\n\n \n\n \n\n \n\nAnalysis\n\nfo t 7 —\nRun-time System Test Case\nf Selection and\n«includes Derivation\n\n© Test Activation >\n\n~ «includes\nService Provider ~\n\n \n\n~\n\n \n\n \n\n \n\n \n\nFigure 20: Functionalities of the Analysis concern\n\nThe Analysis concern will be strongly related to most of the other concerns and will have to consider\nand suggest possible integration to them. In particular, the Analysis concern can be immediately\nrelated to:\n\n1. the extended Composition concern whose concepts will be used to identify strategies and\ntechniques to apply for verification purpose;\n\n2. the Service concern in order to identify the information describing a service and to define how\nservices can be accessed and integrated;\n\n \n\nFP7-257178 CHOReOS 31",
    "Page_43": "3. the Security concern is also related to the analysis concern since activities to be carried out\nfor analysis purpose could depend also from security settings;\n\n4. the Messaging concern can suggest techniques to be applied for automatic test case\nderivation and analysis.\n\nIn addition, analysis activities will be strongly related and enabled/disabled in relation to governance\nsetting and activities. The interrelation will be exploited in detail directly within WP 4.\n\nIn CHOReOS, V&V activities will be activated both at design and run-time by subsystems that will be\nspecifically developed for the purpose, as depicted in Figure 20. Testing activities can be activated\nboth by the Run-time System environment or by a Service Provider to test specific services. The\nautomatic activation tries to provide a solution to the possibility that the run-time context may change.\nV&V activities can then provide a useful mean to assess if the change could lead to possible failures.\nAs detailed later, Test Activation includes Test Case Selection and Derivation and Test\nExecution.\n\n4.3.1. Structure View\n\nThe CHOReOS partners will explore the possibility of extending test execution activities to the run-\ntime phase. In order to make this possible, the CHOReOS infrastructure needs to be defined\nconsidering the concepts represented in Figure 21. In particular, the following elements are\nespecially relevant:\n\n1. Test Selection Strategies: this concept describes the algorithms that will be defined in order\nto derive test cases from choreography specifications, i.e., Choreography Model, and from\ninformation coming from the run-time environment (Run-time Context). This will make testing\nactivities at run-time particularly effective and complementary to off-line testing activities,\nwhich cannot take into account real execution environment and parameter in the test\nderivation related activities.\n\n2. Test Agent: represents those elements that permit to execute the defined test cases on real\nservices. The verification will be mainly devoted with respect to choreography specification.\n\n3. V&V Manager: includes the policy that underneath the decision of starting a test execution\nphase or other V&V activities. The V&V Manager will take its decision on the basis of V&V\nevents coming from the run-time environment and distributed by an Event Broker, possibly\nimplemented using Publish/S ubscribe mechanisms.\n\n4. Test, Test Suite, and Test Case describe the structure and the composition of test cases to\nbe executed to evaluate a service.\n\nDue to scalability issue, most of the elements in the structural models are available in more than one\ninstance at run-time. As a consequence, the different elements will be dispersed within a CHOReOS\ninfrastructure and will be able to act independently.\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\nService atest» Test Agent\nbe -— Sr _ J\n0.\"\n1.\" 0..*\ninclude\n14 Control Contacts\nV&V Manager\n\nTF 0.\" Choreography Model\n\n. Test Repository\n\n{______,__\nNotify\nra jeuse»\nStores |\n1. 14 «derives 1\" _| Test Selection Strategy\nEvent Broker Test EL __ _ Generates __\n\n— > |\n1. Compose «use»\nCollects |\n1.\" a\n\nV&V Event Test Case Test Suite Run-time Context\noe\n\n \n\n \n\nFigure 21: Structure View of the Analysis Concern\n\n \n\nFP7-257178 CHOReOS 32",
    "Page_44": "4.3.2. Data Flow\n\nThe run-time testing system will be mainly activated at run-time in order to execute a testing session\nto evaluate a service. With reference to the data flow diagram depicted in Figure 22, the activation is\ntriggered by a specific event whose occurrence leads to verification activities. Such event could be\npart of management activities. After the activation, a Test Case Selection activity is conducted and\nthis will result in test and test suites generation. Finally, generated tests are executed against the\nservice under test. At this stage, we do not explore the possibility of performing specific activities in\nthe case where executed test cases have highlighted behaviors that are not in-line with those\nspecified in the considered choreography.\n\n        \n     \n  \n  \n\n \n  \n\nActivation\n\n \n\nVerification\nA Event Evaluation\n\n \n\nComposition\nModel\n\n \n\n \n\n \n\n  \n \n \n\n> Test Selection\n\n \n\nRun-time\nContext\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n@ Z Test Execution |\n\nFigure 22: Functionality - Test Activation of the Analysis Concern\n4.4.Discovery Concem\n\nTypically, service discovery is based on a particular protocol that dictates how to publish and\ndiscover information about available services. Publication and discovery further involve the use of\nservice registries (which we also call bases) that store information about available services. As\ndetailed in the discovery concern of NEXOF-RA, the main actors that relate to the discovery concern\nare Providers of services and Consumers of services (see Figure 23). Moreover, we may have\nservice Brokers that act as mediators. The typical functionalities of a service discovery protocol are:\n(1) the Publication of Service Offering, which is used by the service providers; (2) the Discovery\nof Services, used by service consumers; and (3) the Publication of Service demands, which is\nalso used by service consumers. The discovery functionality may be decomposed in two alternative\nfunctionalities; the first one allows service consumers to browse the contents of registries, while the\nsecond functionality allows specifying a service demand and automatically matching this demand\nagainst the descriptions of available services towards finding the ones that satisfy the issued\ndemand.\n\n \n\nFP7-257178 CHOReOS 33",
    "Page_45": "La\n\n \n\nDiscovery\n\n \n\n \n\ny ~ Publication of «extend» — Abstractions ~\n\nService Offering eo J\n\n/ Browsing Service\n\n—_— —_ «includes \\ Abstractions\nDiscoveryof —~—\n\nService\n\n   \n\nBroker\n\n \n\n>\n\n   \n     \n\nProvider —«includes\n\na Searching Service\n7 _— a Abstractions\nPublication of Es CU\nConsumer\n\nFigure 23: Extended Functionality of the Discovery Concern.\n\n \n\n \n\n \n\n \n\nConcerning the service registries that support the aforementioned functionalities, a main concept\nhighlighted in NEXOF-RA is the structure of their contents, which is typically based on a catalogue\nschema that divides services in different categories. Then, a main issue to be handled in the context\nof the Future Internet is that this schema cannot be static or predefined. On the contrary, it should be\nscalable and reflect a proper categorization of the heterogeneous functionalities of the vast amount of\nservices that become available over time.\n\nTo this end, in CHOReOS, we go beyond NEXOF-RA by introducing new high-level concepts in the\ndiscovery concern, along with corresponding lower-level concepts in the structural and the data-flow\nviews of this concern. Specifically, our contribution is summarized in the following points:\n\nA new high-level concept is introduced in the discovery concern, namely the Abstractions\nRecovery functionality. The purpose of this functionality is to reverse engineer service\nabstractions, i.e., groups of available services that are characterized by similar\nfunctional/non-functional properties (i.e., facets in NEXOF-RA terminology), out of services\nthat become available over time. In a sense, the concept of service abstractions corresponds\nto categories. As detailed in the rest of this subsection, service abstractions are hierarchically\nstructured.\n\nMoreover, the concept of service abstractions is employed so as to facilitate the CHOReOS\nbrowsing and searching functionalities of the service discovery concern. In particular, as\nshowed in Figure 23, browsing and searching is based on descriptions of service\nabstractions, instead of descriptions of services, so as to enable the consumers to efficiently\nand effectively retrieve multiple candidates of services that offer similar properties.\n\n4.4.1. Structure View\n\nThe Abstractions Recovery functionality, along with the concept of service abstractions are the\ncentral concepts that affect the definition of the CHOReOS information model of the service\ndiscovery concern.\n\nAs showed in Figure 24, a service abstraction consists of a set of grouped services. Each\nservice is associated with a corresponding service description.\n\nA service abstraction is further associated with an abstract service description. The abstract\nservice description comprises a set of facets that represent the common/similar facets of the\ngrouped services.\n\nA service abstraction may be associated with other lower-level service abstractions that\nrepresent groups of services, which offer more and possibly more concrete functionalities.\nMoreover, a service abstraction may be associated with higher-level service abstractions that\nrepresent groups of services, which offer fewer and possibly more abstract functionalities.\n\n \n\nFP7-257178 CHOReOS 34",
    "Page_46": "We distinguish the following different types of abstractions:\n\ne Functional abstractions - The main purpose of a functional abstraction is to represent a\ngroup of services that offer similar functional properties (i.e., functional facets). At a glance,\nthe description of a functional abstraction is characterized by a set of abstract functional\nfacets, such that there is mapping between the abstract facets and the concrete functional\nfacets of the services that are represented by the functional abstraction. To facilitate\nchoreography adaptation and specifically the substitution of the services used in a\nchoreography, the mapping must preserve certain well-formedness rules of behavioral sub-\ntyping, adapted to the specificities of service-orientation [AZI09b]. The definition of\nrelationships between higher and lower level abstractions should also be based on such\nrules. A functional abstraction may be associated with non-functional abstractions, defined in\nthe following.\n\ne Non-functional abstractions - The main purpose of a non-functional abstraction is to\nrepresent a group of services that are characterized by similar non-functional property(ies)\n(i.e., non-functional facets) such as performance, reliability, availability, reputation, cost\nHence, the description of a non-functional abstraction is characterized by abstract non-\nfunctional facets that reflect the range of the concrete non-functional facets of the grouped\nservices.\n\nBased on the aforementioned functional and non-functional abstractions, the catalogue schema of a\nservice registry (i.e., Service Base in CHOReOS terms) can be organized in terms of different\nfunctional and non-functional views that can be browsed or searched with respect to given service\ndemands. The results of the browsing/searching are groups of services that come along with the\nservice abstractions that represent them.\n\n \n\n \n\n-representedServices [Service\n1.4\n\n \n\n \n\n \n\n \n\n \n\n      \n \n\n  \n  \n\n \n\n \n\n-lowerLevel |0..*\n\nServiceAbstraction E\n\n \n\nSearchCriterion\n\n \n\n \n\n \n\n \n\n \n\n \n       \n\n \n\n \n\n \n\n \n\n \n\n \n\n= -concrete$erviceDescription\n-higherLevel\n-repregentativeDescription 5 =\nFunctionalAbstraction NonFunctionalAbstraction\n{self.serviceDescription .facet->forAll(f] f is functional)} > {self.serviceDescription.facet->for All(f] f is non-functional) }\n\n \n\n \n\n \n\n \n\n \n\n \n\na\" *\n\n \n\n \n\nMapping ServiceBase\n~|FunctionalView NonFunctionalView\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\nWellFormednessRules\n\n \n\nstructures\n\nCatalogueSchema\n\n \n\n \n\nFigure 24: Structure View of the extended Discovery Concern.\n4.4.2. Data Flow\n\nFollowing, a new data flow is introduced in the service discovery concern to describe the abstraction\nrecovery functionality. Moreover, the rest of the CHOReOS functionalities are defined according to\nthe notion of service abstractions.\n\n \n\nFP7-257178 CHOReOS 35",
    "Page_47": "Abstractions Recovery\n\nThe abstraction recovery functionality may be periodically initiated or on-demand, depending on the\navailability of new services over time (Figure 25).\n\n \n\nServiceDescriptions > ( FindSimilarityBetweenServices )_\n\n4\n\n \n\n \n\n \n\ninsert - v\n( GroupMostSimilarServices\n4\n\n    \n\n \n\nServiceDescription ee iceman\nc GenerateAbstractServiceDescription )\n\ncreate\nupdate\nServiceAbstraction | Update “ GenerateMapping |\n\nthere exist further I,\nservice descriptions ~\nto be grouped °\n\n \n\n \n\n \n\n \n\n \n\n()\nFigure 25: Functionality - Abstractions Recovery of the Discovery Concern\n\nThe input to the functionality is a set of available service descriptions. Then, the basic activities\ninvolved in the recovery of service abstractions include:\n\ne The calculation of similarities between the functional/non-functional properties of the available\nservices.\n\ne Finding and grouping of the most similar service descriptions.\n\ne The generation of an abstract service description for each particular group of similar\nservices.\n\ne The generation of mappings between the properties of the abstract service description and\nthe properties of the grouped services.\n\ne The whole process is iterative; the abstract service description of each service abstraction\nproduced by the recovery process is inserted in the input set of available service descriptions,\nso as to enable the creation of higher-level abstractions in subsequent iterations of the\nrecovery process.\n\nThe similarity criteria and the metrics used for the recovery of service abstractions depend on\nwhether the goal is to produce functional or non-functional abstractions.\n\nPublication of Service Offer\n\nThe publication of service offer functionality allows the advertisement of information about a service\nprovided as input by a corresponding service provider (Figure 26).\n\nThe subscription activity may further trigger the abstraction recovery functionality depending on\nwhether a set of published services can be categorized in already existing service abstractions or\nnot. In the latter case, the functional and/or the non-functional views of the registry should be\nupdated via the execution of the abstraction recovery functionality.\n\nA service provider may further request to change, or remove a particular service offer that was\npreviously published. These requests may trigger the need to update the contents of a service\nabstraction included in the functional and/or the non-functional views of the service base.\n\n \n\nFP7-257178 CHOReOS 36",
    "Page_48": "ServiceDescription |__~/ Subscription )\n\n|\nupdate abstraction ( canbe }\n\n< , represented by « .\na existing service update abstraction\n\nabstraction |\n\nNonFunctionalView\n\n \n\n \n\n \n\n \n\n  \n\nFunctionalView\n\nupdate views AbstractionRecovery\n\n \n\n \n\n  \n \n\n \n\n \n\n  \n  \n\nupdate views\n\nupdate abstraction\n\n   \n\nupdate abstraction\n\nChangeRequest\n\n>| Update Service\nAbstraction\n\n©\nFigure 26: Functionality - Publication of Service Offer of the Discovery Concern\nDiscovery of Service\nAs specified in the NEXOF-RA discovery concern, the discovery of services can be done either by\nbrowsing the content of the registry or automatically via algorithms that match a given service\ndemand against the service descriptions stored in the registry. As previously mentioned, the concept\n\nof service abstractions facilitates the efficient and effective retrieval of multiple candidates of services\nthat offer similar properties (Figure 27). More specifically:\n\n \n\ne According to the CHOReOS browsing for abstractions activity, the consumer explores the\nabstractions hierarchies of the functional and non-functional views of the registry to locate\ngroups of services that offer similar properties, which satisfy the consumers service demand.\nBy construction, the abstractions must be such that, if the properties of a service abstraction\nsatisfy the demand of the consumer, then any service represented by this abstraction may\nalso satisfy the demands.\n\ne The CHOREeOS searching for abstractions activity, realizes means that allow matching the\nconsumers demands against abstract service descriptions that characterize abstractions,\nwhich group services with similar properties. As also mentioned in the case of the browsing\nactivity, the abstractions must be constructed such that if the matching of a service demand\nwith a service abstraction description is successful, then any of the services that are\nrepresented by the matched service abstraction may be a candidate solution that satisfies the\nissued service demand.\n\ne Then, the outcome of both of the aforementioned activities is a set of services that meet the\nrequired service demand; the group of discovered services comes along with the abstraction\nthat represents the discovered services.\n\n \n\nFP7-257178 CHOReOS 37",
    "Page_49": "ServiceDemand\n\n   \n\n \n\n| Browsing for | | Sere |\n\n \n\nFunctionalView\n\n \n\n \n\nService Service\nAbstractions Abstractions\nJ J\n\ni\ni\n\n \n\n \n\nNonFunctionalView\n\n \n\n \n\n \n\n \n\n( ReturnResults ,| Selected ServiceAbstraction\n\nI\n©\n\nFigure 27: Functionality - Discovery of Service of the Discovery Concern\n\n \n\n \n\n \n\nPublication of Service Demand\n\nThe publication of service demand is an asynchronous way for discovering services (Figure 28).\nConsumers register their interest for services along with a specific service demand specification.\nThen, at any time a new service offer is published, it is checked against the demands (based on the\ntypical searching for service functionality) of the consumers and corresponding notifications are sent\nif the demands are satisfied by the new service offer. Obviously, the complexity of this particular\nfunctionality is proportional to the complexity of the typical searching for service functionality, due to\nthe fact that the search functionality must be triggered for every consumer publication of service\ndemand. The concept of service abstraction may be employed to reduce the aforementioned\ncomplexity. In particular we adapt the publication of service demand functionality as follows.\n\nAccording to the subscription activity, a consumer provides as input a service demand.\nBased on the service demand the Searching For Service Abstraction activity is triggered.\n\nIf this activity results in a service abstraction that satisfies the service demand, then the\ndemand is associated with this service abstraction.\n\nSubsequent publications of new service offers that result in new members of the service\nabstraction, trigger the retrieval of associated consumers.\n\nNotifications are sent to the associated consumers, without the need for matching the\nservice demands against the service offers.\n\n \n\nFP7-257178 CHOReOS 38",
    "Page_50": "ServiceDemand |____/ Subscription\n\n \n\n \n\n \n\n \n\na  .\n~ SearchingForServ\n\n( jiceAbstractions\n—\n\ntreat as in\nVv NEXOF\nif a services > publication of\nabstraction service\nis found demand\n\n \n   \n   \n   \n\n—w—_§_—\n\n(Associate\nDemand with\nService\nAbstraction\n\n \n\n \n\n \n\n“treat as in\n\n  \n \n  \n    \n\n- y NEXOF\n\n> >| publication of\nif the o| service\nmemb demand\n\nRetrieve\nConsumers\nAssociated\nwith Service\n\nAbstraction\n\n \n\n \n\n \n\n \n\nFigure 28: Functionality - Publication of Service Demand of the Discovery Concern\n\n4.5.Message Concern\n\nThe Message concern of the NEXOF-RA conceptual model [NEXOFRM10] addresses in a generic\nway the communication capability that allows applications or services to interact with other\nservices. This interaction is assumed to be performed through the exchange of messages. The\ngenerality of the approach makes the NEXOF-RA message concern directly applicable to the initial\nCHOReOS conceptual model. Nevertheless, the CHOReOS vision of the Future Internet calls for an\nextended viewpoint in the way this message concern is perceived within the CHOReOS conceptual\nmodel.\n\nAs stated in our literature survey and CHOReOS definition of the Future Internet in Chapter 2, the\nFuture Internet vision aims at incorporating all current networking environments into a single,\nubiquitous setting connecting services, people and things. This results in high diversity in employed\ncommunication middleware and calls for support for the heterogeneous coordination/interaction\nmodels, such as remote procedure call (RPC), message-based, shared memory, and event-based\n\nFP7-257178 CHOReOS 39",
    "Page_51": "models, employed in the various middleware [GRAPI11]. Indeed, different interaction models apply to\ndifferent needs; for instance, asynchronous, event-based publish/subscribe is more appropriate for\nhighly dynamic environments with frequent disconnections of involved entities. This fact makes the\nvarious service bindings accounted for in current service-oriented computing too stringent, since they\ncomply to a single - i.e., RPC or message-based - interaction model. Hence, the CHOReOS choice\nof choreography as global coordination style among services should further be underpinned by\nsupport for the heterogeneous interaction models.\n\nFurthermore, since entities interacting in ad hoc settings cannot be assumed to share the same\ninteraction model, interoperability among the models should be enabled. Despite a number of\napproaches dealing with interoperability between interaction models, provided solutions are in\ngeneral ad hoc and concern specific cases. In the Future Internet as perceived by CHOReOS, an\noverall solution to this issue is required, based on appropriate modeling abstractions and\ntransformation mappings between models. Moreover, a precise evaluation of such mappings with\nrespect to the preservation of semantics is needed. The first step towards a systematic solution to the\nabove issue is to incorporate adequate representation in the CHOReOS Conceptual Model. Hence,\nthe message concern of the CHOReOS Conceptual Model should reflect the Future Internet\ncoordination/interaction diversity and interoperability. In the following, we reconsider the NEXOF-RA\nmessage concern from the CHOReOS Conceptual Model point of view.\n\nMessage\n\nCommunication\nBroker\n\nParty\n\n<<include>>\n\n \n\nFigure 29: Functionalities of the Message Concern [NEXOFRM10]\n\nThe functionalities of the message concern are depicted in the use case diagram of Figure 29,\nborrowed from [NEXOFRM10]. As already stated, the principal functionality concerns the Exchange\nof Message, which is performed between Communication Parties, with eventual support from a\nMessage Broker. The message broker provides functions that may range from simple message\nforwarding to message mediation (e.g., in terms of protocols and data formats) among\nCommunication Parties, and can be, e.g., an ESB. In the CHOReOS conceptual model, we extend\nthe message exchange notion to denote an end-to-end exchange of data (including control) between\ncommunication parties, where the semantics of this exchange may take different forms, such as\nsynchronous or asynchronous, one-to-one or one-to-many, via a direct message or a brokered event\nor a write/read operation in a shared memory. As further depicted in the diagram, the exchange of\nmessage functionality includes the Validation of Message and Routing of Message functionalities,\ncommonly supported by communication middleware. In the following sections, we discuss in more\ndetail the structure view and the data flow view of the message concern.\n\n4.5.1. Structure View\n\nFigure 19, borrowed from [NEXOFRM10], depicts the information model of the message concern.\nThe core concept is Message, basic unit of communication between parties. This concept remains\nperfectly valid in the CHOReOS conceptual model, while keeping in mind the extension given to the\nexchange of messages in the previous section. A message is characterized by a Message Type,\nclassifying the structure and semantics of the message, and Message Metadata associated with the\ncontent of the message and used to process and deliver the message.\n\n \n\nFP7-257178 CHOReOS 40",
    "Page_52": "Defines the\nstructure of <@ Message defines > Message\nMessage > =\n\n0.. 41 Type 41 0... Metadata\na 8\ncontains 2\n2\na\n\nuses\nInteraction Model > Endpoint 0. * Protocol\n\n \n\n \n\n \n\n \n\n \n\nFigure 30: Structure View of the Message Concern [NEXOFRM10]\n\nA message is further associated with an Endpoint, a transport Protocol and an Interaction Model.\nThese concepts specify the entry point of the recipient service that this message should be sent to\nand also the interaction pattern and data transfer protocol that should be followed for correctly\ninteracting with the service. In the NEXOF-RA message concern specification, it is stated that the\ninteraction model may be synchronous or asynchronous and that it relies on a set of message\nexchange patterns (MEPs), where an explicit pointer is given to the MEPs defined in the SOAP\nspecification, such as one-way and request/response. In the CHOReOS conceptual model, we\nextend the notion of endpoint to denote, besides a unique well-identified recipient service”®, a more\nloosely coupled destination, such as all the communication parties subscribed to a specific topic in a\npublish/subscribe setting, or all the parties reading a specific tuple from a shared tuple space. Then,\nthe interaction model and transport protocol are extended accordingly to account for the diverse\ninteraction models and associated transport protocols included in the scope of CHOReOS. Such\ninteraction models and related MEPs include remote procedure call (RPC), message-based, shared\nmemory, and event-based models.\n\n4.5.2. Data Flow\n\nIn the NEXOF-RA message concern specification, a number of activity diagrams are introduced for\ndefining the data flow of the message concern functionalities, as depicted herein in Figure 31, Figure\n32, Figure 33, and Figure 34.\n\nFigure 31 shows the top-level activity diagram for the message concern, where the functionality\nexchange of message processes an arriving message so that it is dispatched to the appropriate\nrecipient party, while taking into account the input of Validation Properties that serve to validate the\nmessage. All this is perfectly applicable to the CHOReOS Conceptual Model, while dispatching now\nconforms to the extended message exchange meaning introduced in the previous sections.\n\n \n\n \n\ni\nB\n)é\n\n‘@\n.®)\n\n \n\n \n\nFigure 31: Data Flow of the Message Concern [NEXOFRM10]\n\nThe functionality Exchange of Message is analyzed in Figure 32 into the two sub-functionalities\nalready mentioned, i.e., validation and routing. Validation checks the message based on the\nvalidation properties (e.g., with respect to its message type or for well-formedness) and validates it or\nissues a Reject Notification to be delivered to the sender of the message. A validated message is\nsubsequently passed to routing.\n\n26 The case of message dispatching to one-of-many recipients and related load balancing supported by the message broker\nis also provided for by NEXOF.\n\nFP7-257178 CHOReOS 41",
    "Page_53": "Message\n\n \n\n \n\n \n\nValidation\nProperties\n\n \n\n \n\n \n\n \n\n \n\nRejection\nNotification\n\n \n\n \n\n>| =>\n[dispatched]\n\n \n\nFigure 32: Functionality - Exchange of the Message Concern [NEXOFRM10]\n\nThe functionality Routing of Message is analyzed in Figure 33. A message is routed to its recipients\naccording to their endpoint information. The message is first forwarded to the message broker,\nwhich takes care of possibly adapting the message and finally dispatching it.\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\nMessage\n[dispatched]\n\n \n\n \n\n \n\nFigure 33: Functionality - Routing of the Message Concern [NEXOFRM10]\n\n \n\nFP7-257178\n\nCHOReOS\n\n42",
    "Page_54": "The functionality adaptation of message is analyzed in Figure 34. After having corrected some\ninconsistencies in the NEXOF-RA diagram (unnecessary message forwarding and duplication of the\nmessage input inside the adaptation functionality), we extend it with some additional functionalities,\nindicated in the figure with a different color and script code.\n\n \n\n \n\n   \n\nene >\nTransport Interaction\nProtocol Model\n\n   \n \n \n \n\n \n\n \n\n \n\n  \n\nAdaptation of\nInteraction Model\n\n  \n\nAdapted\nMessage\n\n(e)\nat\n\n \n\n \n\n \n\nFigure 34: Extended Functionality - Adaptation of the Message Concern\n(update of diagram from [NEXOFRM10])\n\nBased on endpoint (i.e., recipient party) information, message adaptation may comprise different\nkinds of adaptation, such as metadata adaptation (or enhancement of message in the figure),\ndata format adaptation, and transport protocol adaptation between the sender and recipient\nparties, when this is required due to related heterogeneity identified between them. In the CHOReOS\nConceptual Model, we additionally deal with Interaction Model adaptation, the necessity of which\nhas already been made clear from our discussion above.\n\nA key issue pointed out by NEXOF-RA is that message adaptation must preserve the message\nsemantics. Nevertheless, interaction model adaptation is more radical and may introduce some loss\nor modification of semantics. We extend/relax this condition in the CHOReOS conceptual model, by\nstating that transformation mappings between interaction models should preserve the semantics as\nmuch as possible. As we indicated already, we intend to include in our adaptation solution a precise\nevaluation with respect to the preservation of semantics.\n\n4.6.Service Concern\n\nThe Service concern of NEXOF-RA is related to the design, implementation, and execution of service\ncomponents. Moreover it concerns the promotion of legacy components to services. Even though\nimportant, these aspects are not in the main focus of CHOReOS, which instead focuses on the\nchoreography of already available services. However, the definition of the service concern is called to\nevolve to reflect the heterogeneity of services in the Future Internet, and especially those originating\nfrom the Internet of Things. Related extension of the service concern will be defined in the next\n\n \n\nFP7-257178 CHOReOS 43",
    "Page_55": "version of the conceptual model, based on WP3 outcomes as well as definition of the CHOReOS\narchitectural style to be investigated next within WP 1.\n\n4.7,Resource Concern\n\nThe resource concern of NEXOF-RA deals with the computational resources needed to support the\nexecution of all the software components that constitute service platforms, e.g., storage, virtualization\nof computing and network resources. The generality of the approach makes the NEXOF-RA resource\nconcern directly applicable to the initial) CHOReOS conceptual model. Nevertheless, in the next\nversion of the conceptual model, the concern will be refined in order to better fit the CHOReOS vision\nof the Future Internet, in particular accounting for resources associated with Cloud and Grid\ncomputing as well as with the Internet of Smart Things, as investigated within WP 3.\n\n4.8.Govemance and Management Concern\n\nIn the NEXOF-RA conceptual model, a special interest is dedicated to the management concern at\nruntime. CHOReOS will extend this model to include governance aspects at both design- and run-\ntime.\n\nGovernance can be defined by the trilogy of: doing the right things, the right way for the right\nstakeholders [Marks 2008]. The related include not only the governance of services and their\nchoreographies, but also the governance of Service Level Agreements (SLA) and their Life Cycles.\nFigure 35 depicts the functionalities of the Governance & Management concern, as addressed in the\nCHOReOS project. The governance and management functionalities are related to the discovery\nconcern presented in Section 4.4 as well as the analysis concern presented in Section 4.3.\n\nIn more detail, the functionalities embedded in the Governance & Management concern subdivide\ninto:\n\ne Governance, which further includes:\n\no Service Governance that implements the Service enforcement (see Section 4.3)\nand the Service Registry (see Section 4.4) functionalities.\n\no SLA Governance that encompasses the SLA Management, the SLA enforcement\nand the SLA Registry functionalities. The SLA Management functionality is\nresponsible for providing abilities for creating, updating, negotiating and removing\nSLAs. The SLA Registry functionality enables the discovery, publication and SLA\nlookup. A service provider publishes services and SLA templates including the\nservices behavior according to runtime parameters. The service consumers access\nthe SLA registry and select the required SLA templates according to their needs. Once\nselected, the SLA templates are negotiated between service providers and\nconsumers. The SLA Enforcement functionality allows verification and validation\naccording to governance policies.\n\no Choreography Governance that implements the Choreography Registry and the\nChoreography Enforcement functionalities. The Choreography Registry allows the\npublication, discovery and lookup of choreography models and samples. This may\nbe useful at design time if we link the governance tool with the choreography modeling\ntool. This way, when designing choreographies, the designer may be inspired from\nexisting models and samples. As Choreographies are considered as being\ncompositions of services, many functionalities provided by Service Governance match\nthe ones of choreography governance. Finally, the choreography enforcement\nfunctionality helps to apply governance policies to choreographies.\n\ne Policy management that enables the creation, update and removal of policies. It also\nallows the definition, update and removal of governance rules for services, choreographies\nand SLAs.\n\ne Runtime Governance that deals mostly with runtime concerns. It defines a runtime\nmanagement functionality that is itself divided into the monitoring and the test activation\nfunctionalities. Test activation enables the verification of the respect of the SLAs constraints\nand policy rules at runtime, and relates to the Analysis concern presented in Section 4.3.\n\n \n\nFP7-257178 CHOReOS 44",
    "Page_56": "«subsystem» FE]\nGovernance of Choreographies\nChoreography include»\nChoreography\nRegistry includes\nyeincludes SN Choreography\nincludes | ~ include Discovery\n2\n“ C Semy\n«include» Cone” > <>\nUo C Semy Cone” > <>\n2\nGovernance -\n4 =\nManager 2 «subsystems\n7 Service Governance Geer\n«includes tomes ___ «includes\nee ———\ncincuae> | «include» > include»\n. 2 <fnctudes |\n‘. Service Publication\n\\\n\\\n«include» Sens\n\\ SLA Governance\nss sriomnae > - = HH oan\n<includes>\nsincludes\n. ra ude»\nes ‘SLA Lookup\nSLA Enforcement > Enforcement * includes\nSLA Publication\n«includes SLA Creation\n‘SLA Management ee einacneery\nx i SLA Update _\nSLA Negotiation cee\n‘<subsystem>\nPolicy Management\n—_| Bieey Management includes -\n— —sineludes - —\nSS Policy Update\n~ _«includes\nPolicy Creation ~ =\nincludes Policy Removal\n\\\nRules Definition\n«includes 7 ~ See\nseincludes” ~\nRule Update\nsubsystem» 3]\nRuntime Governance\n\n<includg sn sinclude> Service Monitoring ~\n—includes\n\n> Naini > —\n| includes Sta Mentoring >\nFigure 35: Functionalities of the Governance and Management Concern\nStructure View\n\n \n\n \n\n \n\n4.8.1.\n\nWe extend the NEXOF reference diagram with classes expressing services, choreographies and\nSLAs, their life cycle and the governance concerns. Service Level agreement management has been\naddressed in the NEXOF Project as the management of the contracts between service providers and\nconsumers. This functionality is also required in CHOReOS in order to allow the negotiations\nbetween services consumers and services providers. This will be extensively addressed in WP4 on\nGovernance and V&V. The NEXOF Structure view is entirely revised to include functionalities needed\nby CHOReOS. Moreover, a modeling effort has been provided in order to generalize the structure\n\nview used in NEXOF and extend it to cover the Choreography concern.\n\nThe diagram in Figure 36 presents the structure view of the Governance and Management concern\n\nof the CHOR@eOS initial reference model. The view includes:\n\n \n\nFP7-257178 CHOReOS",
    "Page_57": "e Element where we consider the following elements: choreographies, services and SLAs.\nSLAs are composed of several SLO (Service Level Objectives) defining the performance\nand usage metrics. An element has a life cycle and can be described (Description). Finally,\npolicies can be applied to elements.\n\ne LifeCycle that is associated to each element. The lifecycle covers the elements from design\nto runtime and helps applying distinctly governance policies and rules according to each\nstep of the lifecycle. Development, design, and runtime can be part of the life cycle structure.\nFurther structures may be added if needed in order to cover the entire element lifecycle.\n\ne Policy that specifies the behavior of an element. Management, governance, and\nmonitoring policies then extend the Policy concept. Each Policy is composed by a set of\nrules that control the behavior of the elements from design- to run-time. Verification and\nvalidation rules are considered as belonging to the governance policy. These are related to\nthe analysis concern.\n\na\n| | —\n\n  \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\nPerformance\n\n \n\n \n\n \n\nFigure 36: Structure View of the Governance and Management Concern\n4.8.2. Data Flow\nFollowing the structure view for the governance and management functionality, we present the data\nflow view for the main use cases.\n\nPolicy Management Functionality\n\nThe policy management functionality is presented in the data flow diagram in Figure 37.\nConfiguration parameters are taken into consideration while the policies are applied. Policies can\nconcern management, monitoring and governance. They are later applied to services, events, SLAs.\nPolicies can be created, added, updated or removed.\n\n \n\nFP7-257178 CHOReOS 46",
    "Page_58": "Configuration Parameter > ManagePolicy\n\n   \n\n \n\n \n\n    \n\nCreate Policy\n\n \n\nVv vw vy .\n| Remove Policy ) | Add Policy )| Update Policy )\n\n \n\n>\n\n©\nFigure 37: Functionality - Policy Management of the Governance and Management Concern\n\nSLA Management functionality\n\nThe Service Level Agreement management activity enables the creation, update, deletion, and\nnegotiation of SLAs (see Figure 38). SLAs templates are created by the service provider. The SLO\nand metrics are instantiated and their values set.\n\n \n \n\nCreate SLA\n\n \n \n \n\nNegotiate SLA\n\n \n \n\nUpdate SLA\n\n \n \n\n©\nFigure 38: Functionality - SLA Management of the Governance and Management Concern\n\nMonitoring Functionality\n\nThe monitoring functionality enables the observation of the services, choreographies and SLAs in\nthe running environment (see Figure 39). Notifications can be triggered in order to inform the\nsystem about the gathered information. One can set control levels for each resource. The\nnotifications are expressed into Events.\n\n \n\nFP7-257178 CHOReOS 47",
    "Page_59": "Event > Notify\n\n \n\n \n\n®\n\nFigure 39: Functionality - Monitoring of the Governance and Management Concern\n\nThe presented data flow diagrams interact one with the other in order to provide the whole\ngovernance and V&V functionality.\n\n4,9.Security Concern\n\nThe Security concern of NEXOF-RA covers important aspects such as Authentication, Authorization,\nPrivacy and Integrity. In the initial CHOReOS Conceptual Model reported in this document, we adopt\nthe Structure view and the Data Flow proposed in NEXOF-RA for the security concern, without\nadding specific CHOReOS extensions. Indeed, security, although a critical concern in the Future\nInternet, is not a focus of CHOReOS research. Further, in order to avoid duplication of efforts, we\ntake a strategy of concertation with other projects in the FIA, whose focus is specifically in the\nsecurity and trust areas. As a Starting point, we will closely follow the conceptual framework under\ndevelopment within the NESSOS Network of Excellence, of which some CHOReOS partners are also\nmembers. In NESSOS, a specific workpackage is in fact dedicated to the creation of a common\nshared conceptual infrastructure for the Future Internet of Services.\n\n \n\nFP7-257178 CHOReOS 48",
    "Page_60": "5. Specifying and Realizing Concepts of the Initial Conceptual\nModel\n\nThe initial conceptual model presented in the previous section provides a preliminary integrated view\nof high-level concepts and functionalities in support of service choreographies. In this section, we\npresent the baselines for various languages, models, technologies that can be used for choreography\nspecification, execution, governance and V&V. In other words, this section serves introducing\nappropriate modeling languages and techniques for the concerns introduced by the conceptual\nmodel presented in the previous section.\n\nAs specific baselines, we consider:\n\n(i) An extension of i* as graphical modeling technique [YMY 94] to enable domain-expert high-\nlevel specification of choreographies in CHOReOS. The proposed extension will be proposed\nto support the functionality “Goal and Requirements Specification” of the Composition\nConcern;\n\n(ii) SoaML and USDL as modeling and description languages for service-oriented systems.\nSuch languages can be used to describe aspects such as service behavior (e.g., “Service\nBehavioral Models” of the Composition Concern), as well as “Service Contracts” (e.g., “SLAs”\nof the Governance and Management Concern);\n\n(iii) BPMN2 as lower-level choreography specification language, supporting the functionality\n“Specification of Service Choreography” of the Composition Concern;\n\n(iv) Techniques to support the functionality “Enactment” of the Composition Concern, and\n(v) A layered approach to support the “Governance and Management Concern”.\n\nAll the above approaches have already been considered in [D1.1] from a more general point of view,\nwhereas in the following, they are considered with the purpose of specifying and realizing concepts\nof the functionalities defined by the initial conceptual model.\n\n5.1, Baseline for Domain Expert Specification of Requirements\n\nTo enable domain-expert specification of choreographies in CHOReOS, its services and associated\nqualities, we will extend the established i* graphical modeling technique [Y MY 94] and its underlying\nGRL (Goal Representation Language) with syntax and semantics specific to service-oriented\nsystems. Starting with end-user text-based requirements, these will be structured using the\nunderlying GRL and semantics to model services, service roles and the dependencies between\nservices in different choreographies. A meta-model for the i* framework [FG09] is presented in Figure\n40. We will use this as the baseline for a new meta-model reflecting our i* extension for CHOReOS.\n\nThe central unit to be modeled in i* is the strategic actor, with intentional aspects such as objectives,\nrationale and commitments. This permits the modeling of systems as networks of cooperating but\ninterdependent heterogeneous actors, with intentional elements distinguished into four elements:\ngoals, soft goals, tasks and resources. The network connections are represented by dependencies\nbetween actors, which indicate that one actor depends on another for the former to attain an\nintentional aspect [YMY94]. Our work will build upon this by introducing additional syntax and\nsemantics to distinguish between consumer and service actors, and between services delivered by\nsoftware, devices and humans. It will also introduce new semantics for modeling dependencies\nbetween actors that are specific to different choreography strategies, thereby describing different\nlevels and forms of dependencies between actors fulfilled by services to undertake tasks and achieve\ngoals.\n\n \n\nFP7-257178 CHOReOS 49",
    "Page_61": "Property\n[Label : etring\n\n \n\n \n  \n\n \n\n    \n\nDependum\n\n \n\n \n\n \n \n\nIntentional Element\n1 y-type; IntentialType\n\n \n\n \n\n   \n\n{ ssf, completz }\n\n \n\n \n\n \n\nSR Element\n\n \n\nActor\nsort [']: SortType\n\n   \n  \n \n \n \n  \n\n \n\n \n\n{ elajlrt, complots }\n\nMeansEnd TaskDecomposition| |MeansEndContribution\ncontr: ContributionType\n\n  \n\n \n\nTaskOrGoal\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n  \n\n \n\nj\ni\n\n \n\nname : String\n\n \n\nFigure 40: UML Class Diagram for the i* Framework (simplified for readability)\n\nWithin this framework, we include the concept of a satisfaction argument to support reasoning about\nservice and system qualities expressed for a service-oriented system. A satisfaction argument states\nthat using the relevant properties of the application domain, when combined with the specification of\nthe behavior of the system to be implemented, it is possible to show that the requirement will hold\n[HRH01]. We will tailor satisfaction arguments to address challenges specific to the choreography of\nservice-oriented systems, and in particular we will use them to elaborate i* means-end links between\nactor goals. Satisfaction arguments were first reported in [}AC95] and applied in the REVEAL\nrequirements method [HRHO1] to recognize the role of assumptions in specifications. This extension\nis not novel - previously we introduced satisfaction arguments to handle the role of domain\nknowledge in the specification of safety-related requirements in air traffic control [MLR07].\n\nFigure 41 shows the conceptual model linking satisfaction arguments to i*. An actor seeks to achieve\nor attain an end-element, which can be a goal or soft goal (for example a service quality). An actor\nalso has the means to achieve or attain the end-element, usually a task (or functional requirement).\nWhere the end element is a soft goal, the relationship is attributed with values that specify the\nmodality and type of contribution (Some+, Some-, Help, Hurt, Make, Break, Unknown) reported in\n[YLLO1]. Also, soft goals can represent tradeoffs, for example between service qualities. Each\nsatisfaction argument is developed for one and only one end-element of a means-end link, and\nincludes properties of the domain that must be true for the means to contribute to the end.\n\n \n\nFP7-257178 CHOReOS 50",
    "Page_62": "¥\n> is argumentfor #* endelement a.\n- 1\nG.. a <s\n1\nsatisfaction it\nan <isameansto actor\nse oO.\n& 8. ' seeks>\n\n“Seuss | __ Fmeenecament\n>is erquedwith : a.\n\n1 ih\n\n \n\ngoal | | resource | task | | Softgoal\n\n \n\nFigure 41: Conceptual Model that relates Concepts from i* and Satisfaction Argument\n\nUsing this approach we will, for the first time, extend satisfaction arguments with information about\nchoreography strategies and their indicative impacts on the relationships between the qualities of\ndifferent services and, ultimately, the system. Central to the success of this technique is an\nunderstanding of how a specified choreography affects service qualities, hence we will develop\nsimple libraries of patterns from empirical studies of choreographed systems to describe these\naffects and enable their reuse in satisfaction arguments. We will use these affects to propagate\nservice qualities through a model of a service-oriented system based on tool-supported model\nwalkthroughs. We will use a text-based representation of the underlying i* model for the end-user to\nnavigate, complete with the associated satisfaction arguments. The result will be a further extension\nto the new large-scale i* modeling technique to introduce service choreography and explore its\nimpact on a modeled service-oriented system.\n\nFinally, we will link the extended i* approach with a new quality ontology to express qualities that\nactors are seeking to achieve with consistent metrics and scales. Figure 42 shows an extract from\nthe Service Measurement Index (SMI) i* reference model, which specifies the definitions, measures,\nmetrics and indicators of cloud service characteristics [CCC10]. Soft goals and contribution links\nrepresent the characteristics and relationships respectively, and task and resources represent\nmeasurements and metrics. We will build upon this research for CHOReOS, the result being a new\nversion of the i* modeling technique and its underlying semantics to model service-oriented systems\nand their qualities.\n\n \n\nFP7-257178 CHOReOS 51",
    "Page_63": "[440] saunyjey yo ay1ds ul suoyouny je2449-UoIss}W\nJequassa apiaoid 0) anuquod 0} a2!MJas e UO puadap\nUBD SIBPjOyaxeyS YDIYM 0} aai6ap ayy Jo unseat\n\n® sty [3aND-S) [2'€'T-vut-G9] ‘uoneyuawajdui\n4o/pue a2e}J93U! $)! JO wd} UY BdVUaS a4 0} Payeje1\naBuey> jo Asuanbay ayy jo aunseaw y :AqyIGeIS\n\n“Pep Jo ssaupayep-o}-dn ay}\nAVeDIpU! 0} Sit SSN UONeye1dJaU! JayJOUY \"ISMUA/AY}IGeHE\n“6:8 Jo uoReDIpul Jaupu! Ue aq Aew SIYL (Z0°T UOISIAA }! St\n*6ra) Ss} a2juas e paysiiqeysa MOY JO UOeDIpU! UY :AjUNVeW\n\n(oem) ‘[b]\n\nsyapiaoid a2iuas pue sso}sanbos\nadiasas Aq paaiadau pue\nPpayywsues Gujaq sabessaw soy\nAvanyap pasapio pue painsse au)\n0} payeja osje S| Ayiqerjay “sead\nJo ‘yyuow ‘yaa ‘Aep sad sasnjiey\nJO Joquinu ayy 0} payejas St\nB2\"aS Gam e JO auNseaw |je1aA0\nUL “Ajjenb aouas $y! wequeW\n0} adyuas qam e jo aunseaw\nWesaA0 ayy s} Ayiiqeyad oy\n\n‘Tot] jearaju: awy pay!oads e 10y\nSuojpuod payeys Japun suonouny\nPauinbas sy wuoysad 0) a21uas\ngam e yo Auge ayy :Awqelay\n\nDem] “paxonut st\n7 UayM Ajayeipauiyy a1qeyeAe aq\nPinoys ao1nsas ayy “[p] adjasas\n\nau squasaiday ULL *\n\nUM payeposs\nsyedoy-07-OuuL [TT] Agena\n0} poyejas pue dn s} wayshs ayy\n\n(@iqeere “9\")) Apeas aq Pinoys\nAdIAMaS Gam ay :AjNGeHeAY\n\n“paysnuy ag Aiqeyysnf ued yey) B21AN9S J9AWJOP 0} AYNGe Buy\n| waysAs Buyndusoo e Jo Ayyiqepuadag :ALTIGVGN3d30\n\n \n\nMetrics and Indicators\n\n[3an9-S] [2°T'T-vut-a] “sasned Jo AjaueA\n@ uo Bulpuadap quayayyip aq Aew 3jney\n\nJO aunjeu ays “aunijey e ‘a2uanbasuod se\n‘pur ‘]21S snodUOUD Ue 0} pea| UD je\nYORNDaXD |2!UIS a4 U! JUBAd ajgeAJasqo\n\nwou (J9A0D0J puke) PUeISUZIM 0} QIeMYOS\nJO Aquige ayy :22U219}03 jNey/2DUaIIISFy\n\n[39nd-S) [1°2°T-vut-Od] “vonerydde augua ayy yo\nquaware|day uel) Jayjo suea Aue Aq UoANDExa AJoPeYsHeS\nAljny 0) SuOROUNY $31 JO BOW! JO BUO WOJad 0} BUIW!Ey\n\nJaye uoyerjdde a1 Gujsoysas Jo ssadoud e s| AaA02ay\n\n[ost] \"suoj2auu0s yomjau pue eyep Guypnjauy ‘uoyesado |\\ny\n0} waysAs pailey e yDeq Bulg 0} Aylige OUL :AyNIGexaA0DIy\n\ni* example showing the Decomposition of the Dependability Characteristic for\n\n(3an9-s] [1002 ‘Ie 3 swuarzjay)\n\nAyyiqepusdag - ALITIWVND\n\nCloud Services - representing Definitions, Measures,\n\nFigure 42\n\n \n\n52\n\nCHOReOS\n\nFP7-257178",
    "Page_64": "5.2, Baseline for Service Specifications\n5.2.1. SoaML - Service-oriented architecture Modeling Language\n\nThe SoaML (Service-oriented architecture Modeling Language) is a new modelling standard that is\nunder development in OMG (Object Management Group). SoaML aims to add SOA concepts on top\nof UML (Unified Modeling Language), which is considered as de facto standard in software\n\n   \n   \n  \n\nmodelling.\n«stereotype» «metaclass» «stereotype»\nParticipant Class Capability\n\n \n      \n\n   \n\n«stereotype»\nAgent\n\n«stereotype» «metaclass»\nServiceinterface Interface\n\nBo «stereotype»\nCreates ay MessageType\nDataType encoding : String [0..1]\n\nSoc Catt\nSTE\n\n«stereotype» «metaclass»\nCollaboration PoE TTC)\nSe\na «metaclass» «stereotype»\npri Ce 2 Expose\n«stereotype» «stereotype»\n«stereotype» «metaclass» «stereotype»\nRequest las Service\nSS\n«stereotype»\n\nconnectorRequired : Boolean [0..1] = true\nisConjugated : Boolean (0..1] = false\n\n«metaclass» «stereotype»\nConnector ServiceChannel\n\nCTC ae\n\n     \n \n    \n \n  \n\n \n \n\n \n    \n   \n \n     \n    \n\n \n\n   \n\n    \n  \n\n   \n       \n\n«metaclass»\nfeel Tract) us\n\n   \n   \n     \n    \n \n  \n\n     \n\n«stereotype»\nMilestone\n\nprogress : Integer [0..1]\n\n   \n\nComment\n\n     \n\n \n \n\nsignal{0..1 value} 0..1\nprea ree perros een pee nes «stereotype»\nSITE) ValueSpecification ferries CollaborationUse\n\nisStrict : Boolean [0..1] = true\n\n«stereotype»\nAttachment\n\nencoding : String [0..1]\n\n      \n  \n  \n\n«metaclass»\nProperty\n\n«stereotype»\nProperty\nisID : Boolean [0..1]\n\n  \n\n \n\n \n  \n      \n\n   \n     \n \n   \n \n\n«stereotype»\nConsumer\n\n«stereotype»\nProvider\nLE\n\n \n\n \n    \n\nTc Cath)\n\n \n\nTeter ta\n\n«metaclass»\nfart TS\n\n  \n\nFigure 43: UML Profile for SoaML\n\n \n\nFP7-257178 CHOReOS 53",
    "Page_65": "SoaML is defined both as a metamodel, which extends the UML metamodel, and as a UML profile\n(Figure 43). SoaML is a rather light addition, which adds only few concepts to UML that mostly rely\non the underlying UML concepts - only a few additional properties are added in several SoaML\nmetaclasses/stereotypes.\n\nProbably the most important SoaML aspect is that it provides interoperability with UML based models\nand other OMG modelling standards based on UML, e.g., SysML (System Modeling Language),\nwhich provides important Requirements concepts that are missing in UML. Thus, SoaML provides\nevolutionary instead of revolutionary approach to model-based SOA, which can be easily supported\nby modelling tool vendors and taken into use by modellers.\n\nSoaML is a candidate for application in CHOReOS as a part of choreography design tooling.\nHowever, it does not provide all the necessary concepts, with the following most important limitations:\n\ne SoaML does not provide a means for capturing requirements or integrating with external\nrequirements models;\n\ne SoaML does not provide a means and a clear approach for integration with business process\nmodels expressed in BPMN 2.0, which is considered as de facto standard in business\nprocess modelling.\n\nCHOReOS aims to solve these limitations by combining SoaML with BPMN 2.0 and CHOReOS\nspecific modelling concepts using UML profiles as model integration technology.\n\nAlso, itis worth mentioning that SoaML is still in beta2 version, which was not finalized since the end\nof 2009 due to technical debates at OMG. One of the aims of the CHOReOS project is to contribute\nto the finalization and further evolution of the SoaML standard.\n\n5.2.2. USDL - Unified Service Description Language\n\nThe Unified Service Description Language (USDL) [USDL10] is a platform-independent language for\ndescribing services. It is provided by SAP Research organization. USDL can also be a good\ncandidate in CHOREOS for describing the services participating to a choreography.\n\nE\n‘\n\n'\n'\n.\n&\n&\nk\n\n2 functional |\n\n \n\n \n\n   \n\nals\na\na\n‘ OL\n‘ 3\no\n, | &\nG\n‘ 7\n\nSRE RE DAR A service level\n\nFigure 44: USDL Metamodel Modules\n\nOn a whole, USDL is made up of a set of modules, each addressing different aspects of the overall\nservice description. USDL modules are inter-dependent, as they may reuse concepts from other\nmodules. Figure 44 depicts the modules of the USDL platform:\n\ne The topmost Foundation module covers common concepts that are used multiple times\nthroughout other parts of USDL, concepts that cannot logically be assigned to any module,\nand concepts that are independent of the notion of service.\n\ne The Service module represents the central concepts of USDL, which are the service and\nservice bundle concepts; the module further includes some operational aspects such as the\nfunctional decomposition, and dependencies between services and other entities.\n\n \n\nFP7-257178 CHOReOS 54",
    "Page_66": "e The Participants module covers concepts that relate to the actors participating in the\nprovisioning, delivery and consumption of services and service bundles.\n\ne The Functional module allows capturing the business functions and capabilities of a service.\n\ne The Pricing module covers the concepts that are needed to adequately describe price\nstructures in the service industry. Given the increasing complexity and variety of this aspect of\nservice provision, a modular representation of price charges is supported, together with the\nelements necessary to specify common segmentation strategies.\n\ne The Interaction module covers concepts that describe how consumers should communicate\nwith complex services with respect to individual interaction points.\n\ne The Legal module provides description capabilities for usage rights. The module does not\nserve as a comprehensive contract template; in fact, such a contract is determined by several\nparameters that are derived from the other modules, in particular Pricing, Functional, and\nService Level.\n\ne The Service Level module covers concepts around Service Level Agreements (SLAs), i.e.,\nthe specification of agreed conditions for a service delivery, namely guaranteed states and\nguaranteed actions.\n\n5.3. Baseline for Choreography Specifications\n\nCHOReOS intends to provide tooling for choreography modeling, which will use BPMN (Business\nProcess Model and Notation). BPMN is accepted as de facto standard in business process modeling,\nand its recent version 2.0 provides Choreography Diagrams (Figure 45). Since integration of\nbusiness processes and software services is a hot topic, CHOReOS expects maximum impact by\nproviding a choreography design solution, which will be based on extended version of BPMN 2.0.\n\nIn BPMN 2.0, choreography is a type of business process, but differs in purpose and behavior from a\nstandard BPMN process. A BPMN standard process defines the flow of activities of a specific partner\nentity or organization. Contrariwise, choreography formalizes the way business participants\ncoordinate their interactions. The focus is not on orchestrations of the activities performed within\nthese participants, but rather on the external exchange of information (messages) among them.\nThus, a choreography diagram is another way of modeling the “ping-pong game” among different\nparticipants without explicitly specifying the internal process flow of each participant.\n\nBPMN 2.0 has evolved into a rather powerful and rich language with a well defined meta-model,\nwhich provides a rich set of process modeling concepts, but still only slightly touches other important\naspects such as data structure modeling, which is extremely important for modeling service\nmessages, or defining interfaces and quality contracts of software components providing services\nthat are consumed in business processes. Unfortunately, BPMN was defined as a separate\nmetamodel, which provides no interoperability with UML/SoaML models that can capture further\ndetails on service contracts and messages. CHOReOS intends to build UML profile for BPMN 2.0\nchoreography modeling capabilities, taking as a starting point the existing UML profile for BPMN 2.0\nthat is provided with MagicDraw modeling product line. However, this profile is not standardized at\nthe moment. In order to achieve maximum adoption and impact, the CHOReOS project intends to\ncontribute to the standardization of UML Profile for Business Processes at OMG. Such a\nstandardized profile will not only enable business process choreography modeling in UML tools but\nalso play a significant role in adopting BPMN 2.0, and choreography modeling in particular, as a part\nof UML based Enterprise Architecture (EA) frameworks, MODAF that is based on UPDM (Unified\nProfile for DODAF and MODAF) [UPDM05].\n\nCHOReOS will also go beyond the definition of UML profile for Business Processes, as it will be\nnecessary to identify new concepts that are required to support user-centrism, decentralization,\ncompositionality and incrementality, adaptation, and QoS awareness of choreographies. In particular,\nnew modeling constructs will be conceived to deal with decentralization, compositionality and\nincrementality that are the fundamentals of ultra-large scale choreographies that CHOReOS wants to\ninvestigate. CHOReOS intends to promote some of these concepts to become a part of BPMN 2.x or\nlater revisions.\n\n \n\nFP7-257178 CHOReOS 55",
    "Page_67": "Figure 45: An example of BPMN 2.0 Choreography Diagram\n\n \n\nFP7-257178\n\nCHOReOS",
    "Page_68": "5.4, Baseline for Choreography Execution\n\nService choreography gives a more distributed and scalable vision of service composition. Service\nchoreography is not intended to be executed but to provide a global view of the concurrent execution\nof a number of interacting service processes. In ultra-large scale systems, due to the important\nnumber of processes that are running, it is essential to control services behavior during the\nexecution. Service choreography can be seen as a governance mechanism that ensures the good\nfunction of the executing processes.\n\nWhile service composition languages are numerous, there are only few languages for describing\nservice choreography. Languages include the WS-CDL (Web Service Choreography Description\nLanguage) and the WSCI (Web Service Choreography Initiative) from W3C, which are\nimplementation-focused. Let's dance [Zaha2006] is a graphical-oriented academic language. On the\nother hand, the BPMN2.0 standard integrates in its latest version choreography graphical\nannotations. Graphical annotations are interesting since they are platform-independent and they\nallow an easy representation of high-level choreography of services.\n\nApproaches to service choreography address the multi-partners and distribution concerns that are\nrequired in ultra-large scale systems but which are not fulfilled by service orchestration. As systems\nare becoming more widespread and services more numerous, service composition needs to cope\nwith large-scale systems and to tackle the raising complexity induced by heterogeneity and\nscalability. A centralized view is no more sufficient to answer new Future Internet system\nrequirements. In CHOReOS, we deal with a widely distributed system view.\n\nThe authors in [Yildiz2007] address this issue by proposing a framework for process transformation\ntechnique. Their approach converts a centralized BPEL process into a set of nested processes able\nto be deployed on dynamically bound services. The authors consider a graph-like representation of\nthe process and a transformation algorithm.\n\nIn [Viroli2007], the authors consider a multi-agent system where BPEL activities are autonomously\nexecuted by agents and the mediation is supported via a coordination model. A semantic layer is also\nadded to describe service. The overall engine architecture is composed of three tiers each\nresponsible of a different aspect of the system: the interaction tier collects the incoming requests\nfrom the Web Service that is orchestrated by the BPEL; the correlation tier is responsible for\ninterpreting messages and their correlation sets. Then, the messages are routed to the proper\nprocess instance. Finally, the workflow tier executes the activities of each process instance.\n\nIn [Chen2008], the authors develop a concurrent service orchestration engine called OnceBPEL2.0\nbased on Event-Driven Architecture. They target the improvement of performance under massive\nconcurrency and design a scalable BPEL engine. Finite State machines are used to describe the\nsemantics of the BPEL process. A mapping between BPEL activities and finite state machines is\nrealized. Then, rules designing the state transitions within the process are represented using EDA.\nAgents are set in the orchestration engine to cope with time-consuming tasks. The authors evaluate\ntheir approach by realizing performance evaluations of average throughput and response time. The\nevaluation tests consider until two hundred virtual users.\n\nIn the CHOReOS project, challenging issues need to be addressed; these are related to the growing\nnumber of users, services and interactions. A high level modeling language that captures the user\nrequirements is needed. The BPMN2.0 language previously presented is a good candidate for\ndesigning choreographies in a graphical way. However, BPMN2.0 specification is not executable and\nis not linked to executable orchestration processes.\n\nFor describing and executing the service choreographies, in the CHOReOS Project, we may consider\nboth BPMN2.0 and the BPEL orchestration language. In Figure 46, we present a multilayer view of\nchoreography and orchestration, where choreography specifies at a high level the global interactions\nof many participants without delving into the details. In a lower layer, distributed orchestrations are\nrepresented using BPEL. Execution is then handled via orchestration engines that must be monitored\nat a high level in order to ensure the good behavior of the choreography.\n\n \n\nFP7-257178 CHOReOS 57",
    "Page_69": "=z 4\nChoreography —\n\n>> > GD,\n=> > GED GED\n\n \n  \n\n \n \n     \n   \n\n    \n\n \n\nFigure 46: Multilayer View of Choreography and Orchestration\n5.5.Baseline for Governance and V&V\n\nA study conducted by Gartner lists insufficient validation in the “hit list” of the most common\ntechnological errors for planning SOA implementations [Gart07]. The same study recommends that\nat least 25% of the effort spent in a SOA project must be dedicated to testing. Although other\nEuropean projects, such as SECSE and S-Cube, have analyzed SOA solutions, focusing on software\ntesting and quality evaluation, a precise conceptual model has not been derived. Besides, the V&V\nconcerns have not been so deeply investigated in the service engineering literature, although V&V\nactivities can mainly be included in the Analysis concern suggested by the NEXOF-RA conceptual\nmodel.\n\nIn the CHOReOS approach for V&V, testing will play a very relevant and significant role. In that\nsense, the CHOReOS conceptual model incorporates design-time, development-time, and run-time\ntesting as a fundamental activity of the CHOReOS development cycle.\n\nFigure 47 depicts a global view of the governance baselines that can be adopted in CHOReOS. It is\npossible to subdivide governance into the following layers:\n\ne Services: At the service level, governance deals with observing the services given their\ndescription. Web Service Description Language is a commonly used specification for\ndescribing web services. A WSDL-based service is described by a XML file which defines its\nlocation, interfaces, and operational data allowing its use. It helps services publication and\ndiscovery.\n\ne Service Level Agreement (SLA): Contracts are made between a service provider and a\nservice consumer. In these contracts, non-functional features such as performance and\nmaterial resource usage can be mentioned as a warranty for the service consumer. The\nservice level agreement is a standard that allows expressing this kind of contracts between\nservices. The governance tool may consider also the publication and discovery of related\nSLOs to allow users to choose services considering non-functional concerns.\n\ne Choreography: the governance of choreographies includes the definition of a choreography\nregistry from which a choreography designer can take samples or models. Besides, governing\nchoreography may include the definition of non functional concerns at design-time. As\nchoreography is composed of a set of distributed services, service governance functionality\nmay cover its main concerns.\n\ne Life Cycle: Each element (service, choreography, SLA) has a life cycle that can be governed\nat each step from design time to runtime. Test activation including Verification and Validation\nis one of those steps; consequently we can consider a testing framework and methodology.\nAt design-time, model, service, SLA, and choreography specifications will be checked for\nconsistency and feasibility. At development-time, a Test-Driven Development (TDD) [Bec02]\n\n \n\nFP7-257178 CHOReOS 58",
    "Page_70": "methodology, supported by a generic framework for automated testing of choreographies, will\nbe used to produce more reliable code with fewer bugs. At run-time, monitoring of\nchoreographies will be carried out to validate the execution of the systems. Policies need also\nto be applied.\n\nThe governance and V&V tool must be interfaced with the service execution environment in order to\nmonitor and control services, orchestrations and choreographies at runtime.\n\n»>> — Choreography\n\nLookup for :\nServices, NYol avi [a cy\nchoreograp\n\nhies, SLAs. =a)\n\n \n\nService Execution Environment\n\nFigure 47: Baseline for Governance and V&V within CHOReOS\n\nFinally, in the context of testing activities and the corresponding derivation of a conceptual model,\nUML Testing profile [UMLTest05] will be addressed. This is a general conceptual model that will help\nus to derive and elaborate a specific conceptual model within the context targeted by CHOReOS.\n\n \n\nFP7-257178 CHOReOS 59",
    "Page_71": "6. Conclusions\n\nIn this deliverable, we outlined the CHOReOS perspective on the choreography-based Future\nInternet, its requirements and its conceptualization. Based on the broad and mostly informal definition\nof the Future Internet available to us, we provided an overview of the many facets that must be\nconsidered in the realization of the Future Internet, and in particular the related Internet of Services\nand Things. By providing an overview independent of the more specific focus of CHOReOS, we were\nable to put the RTD work into the perspective of the overall Future Internet vision, and further elicit\nrequirements for the choreography-based Future Internet where systems are realized as a\ncomposition of services discovered in ULS networking environments.\n\nConsidering NEXOF-RA as a praeludium providing general background concepts underpinning SOA\ninfrastructures within the Future Internet, the initial Conceptual Model for CHOReOS has been\ndefined according to the provided overview of the Future Internet and its requirements. Then,\ndifferent languages, models, technologies have been considered as baselines to specify and realize\nconcepts devised by the conceptual model, i.e., choreography and service specification, execution,\ngovernance, and V&V.\n\nThe initial CHOReOS Conceptual Model for the choreography-based Future Internet, introduced in\nthis deliverable, will serve as input to the development of the RTD work packages WP2-3-4-5. The\nfurther definition and refinement of the conceptual model in WP 1 will be undertaken in parallel with\nthese work packages, hence benefiting from the lessons learnt from concrete instantiations as part of\ntechnological developments.\n\nIn more detail, based on the initial conceptual model introduced in this deliverable, our ongoing and\nfollow-up work relates to:\n\ne Studying the impact at large of the Future Internet's ULS dimensions and related challenges\nupon the traditional SOA paradigms so as to accordingly define in WP1 a reference\narchitectural style for architecting CHOReOS-based systems. The CHOReOS style shall\nidentify key aspects of the target systems, in terms of representative components (abstracting\nservices in the Future Internet of Services and Things), connectors (abstracting interaction\nprotocols) and coordination protocols (abstracting the behavior of choreographies);\n\ne Devising in WP2 the CHOReOS development process and supporting toolset for\nchoreography design;\n\ne Devising in WP3 the CHOReOS middleware to provide the necessary runtime support for\nchoreographies in the ULS Future Internet of Services and Things;\n\ne Devising in WP4 the CHOReOS solutions supporting Governance and Verification &\nValidation of ULS choreographies;\n\ne Defining in WP5 the infrastructure architecture of the CHOReOS IDRE, which integrates the\nresults of WP2 to WP4, thereby supporting the design, development, enactment, and\nvalidation of choreography-based large scale service-oriented systems in the Future Internet.\n\nThe above will lead to refine the conceptual model, further resulting into strictly related artifacts that\nwill characterize and support the choreography-based Future Internet.\n\n \n\nFP7-257178 CHOReOS 60",
    "Page_72": "7. References\n\n \n\n[AL-MAS RIM08]\n\nE. Al-Masri and Q. H. Mahmoud. Investigating web services on the world wide\nweb. In WWW, pages 795-804, 2008.\n\n \n\n[AZ109a]\n\nD. Athanasopoulos, A. Zarras and V. Issarny. ForeverSOA: Towards the\nMaintenance of Service Oriented Software. In Proceedings of the 3rd CSMR\nWorkshop on Software Quality and Maintenance (SQM), 2009.\n\n \n\n[BBBE07]\n\nM. Beisiegel, H. Blohm, D. Booz, M. Edwards, O. Hurley, S. lelceanu, A. Miller,\nA. Karmarkar, A. Malhotra, J. Marino, M. Nally, E. Newcomer, S. Patil, G. Pavlik,\nM. Raepple, M. Rowley, K. Tam, S. Vorthmann, P. Walker, L. Waterman. SCA\nService Component Architecture - Assembly Model Specification. Open Service\nOriented Architecture\nwww.osoa.org/download/attachments/35/SCA_Assembly_Model_V100.pdf? versi\non=1, 2007\n\n \n\n[BDO06]\n\nA. Barros, M. Dumas, and P. Oaks. Standards for Web Service Choreography\nand Orchestration: Status and Perspectives, presented at Business Process\nManagement Workshops, Nancy, France, 2006\n\n \n\n[Bec02]\n\nK. Beck. Test-Driven Development: By Example. Addison-Wesley, 2002\n\n \n\n[BHMNO7]\n\nD. Booth, H. Haas, F. McCabe, E. Newcomer, M. Champion, C. Ferris and D.\nOrchard. Web Services Architecture. Technical Report, W3C, 2004\n\n \n\n[BIPT09]\n\nA. Bertolino, P. Inverardi, P. Pelliccione and M.Tivoli, Automatic Synthesis of\nBehavior Protocols for Composable Web-S ervices, in: Proceedings of The 7th\njoint meeting of the European Software Engineering Conference (ESEC) and the\nACM SIGSOFT Symposium on the Foundations of Software Engineering (FSE),\nAmsterdam, The Netherlands, pages 141-150, 2009\n\n \n\n[Blackman10]\n\nColin Blackman, lan Brown, J onathan Cave, Simon Forge, Karmen Guevara,\nLara Srivastava, Motohiro Tsuchiya and Rafael Popper, Towards a Future\nInternet\n\nInterrelation between Technological, Social and Economic Trends, 2010,\nAvailable at http://www. internetfutures.eu/wp-content/uploads/2010/11/TAFI-\nFinal-R eport. pdf.\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n[Carnot11] Les Instituts Carnot, Smart Networked Objects and Internet of Things, 2011,\nAvailable at http://Awww. instituts-carnot.eu/files/AiCarnot-White_Paper-\nSmart Networked Objects and Internet of Things.pdf.\n\n[CASAGRAS09] | CASAGRAS group. RFID and the Inclusive Model for the Internet of Things.\nhttp://www. rfidglobal.eu/userfiles/documents/FinalR eport.pdf, 2009.\n\n[CBDI07] CBDI. CBDI-SAETM Meta Model for SOA Version 2.0. Technical Report,\nwww.cbdiforum.com/public/meta_model_v2.php, 2007\n\n[CCC10] Cloud Commons Consortium, 2010, http://www.cloudcommons.com/\n\n[CDDD05] M. Colombo, E. Di Nitto, M. Di Penta, D. Distante, M. Zuccala. Speaking a\n\n \n\nCommon Language: A Conceptual Model for Describing Service-Oriented\nSystems. In Proceedings of the 3rd International Conference on Service Oriented\nComputing (ICSOC 2005), Springer, 2005\n\n \n\n \n\nFP7-257178\n\nCHOReOS 61",
    "Page_73": "[CISCO10]\n\nCisco: Cisco Visual Networking Index: Forecast and Methodology, 2009-2014,\n2010, Available at http://www.cisco.com/en/U S/solutions/collateral/-\nns 341/ns525/ns537/ns 705/ns827/white paper c11- 481360.pdf.\n\n \n\n[CISCO11]\n\nCisco, White paper Cisco Visual Networking Index: Global Mobile Data Traffic\nForecast Update, 2010— 2015, 2011, Available at http://www.cisco.com/en/US/-\nsolutions/collateral/ns 341/ns525/ns537/ns705/ns827/- white paper c11-\n520862.html.\n\n \n\n[D1.1]\n\nCHOReOS Project Team. CHOReOS State of the Art, Baseline, and Beyond.\nPublic Project deliverable D1.1, 31 December 2010\n\n \n\n[D5.1]\n\nCHOReOS Project Team. Requirements for the CHOReOS IDRE. Public Project\ndeliverable D5.1, 31 May 2011\n\n \n\n[Daras09]\n\nDaras P. etAl., Why Do We Need a Content-Centric Future Internet? Proposals\nTowards Content-Centric Internet Architectures, Information Society and Media\nJ ournal, 2009.\n\n \n\n[DD04]\n\nR. Dijkman and M. Dumas. Service-oriented Design: A Multi-viewpoint Approach.\nInternational J ournal of Cooperative Information Systems, 13(4):337-368, 2004\n\n \n\n[DS108]\n\nJ .S. Da Silva, Eu approach towards the Future Internet. EURECOM message\nmagazine (2008)\n\n \n\n[EGA106]\n\nEnterprise Grid Alliance. Reference Model and Use Cases - Part 1 of 2. EGA,\n2006\n\n \n\n[EGA206]\n\nEnterprise Grid Alliance. Reference Model and Use Cases - Part2 of 2. EGA,\n2006\n\n \n\n[eM obility07]\n\nFrank-Uwe Andersen, Hendrik Berndt, Henrik Abramowicz, Rahim Tafazolli.\nFuture Internet from Mobile and Wireless Requirements Perspective, 2007,\nAvailable at http:/Avww.emobility.eu.org/W orkingG roups/P ostIP /WhiteP aper_v0-\n6.pdf.\n\n \n\n[eM obility08]\n\nJ ose Marie Cabero, Tapio Frantti, Raffaele Giaffreda | yrki Huusko,\nLuis Munoz, Rute Sofia, Rahim Tafazolli, Mika Ylianttila, Tanja Zseby, Future\nInternet in a Post-IP era and Experimental Test- beds, 2008, Available at\n\nhttp://www.emobility-ca.eu/deliverables/D3.2\n%20White Paper on Future Internet in a Post IP era FINAL.pdf.\n\n \n\n \n\n \n\n \n\n[ETP 09]\n\nFuture Internet, The Cross-ETP Vision Document, 2009, Available at\nhttp://www. future-internet.eu/fileadmin/documents/reports/C ross-\nETPs_Fl_Vision Document_v1_0.pdf.\n\n \n\n[Eurescom08]\n\nJ oao Schwarz da Silva. EU approach towards the Future Internet. EURECOM\nmessage magazine, pages 9-10, 2008.\n\n \n\n[FANK05]\n\nJ. Fan and S.Kambhampati. A snapshot of public web services. SIGMOD\nRecord, 34(1):24-32, 2005.\n\n \n\n[FG09]\n\nFranch, X., Grau, G. ‘Towards a Catalogue of Patterns for defining Metrics over i*\nModels’. J ISBD 2009: pp417-417, 2009\n\n \n\n[Fl_ Vision]\n\nFuture Internet - The Cross-ETP Vision Document, v1.0, 2009.\nhttp://www. future-internet.eu/fileadmin/documents/reports/Cross-\nETPs Fl Vision Document v1 0.pdf\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n[FIA_FCN]\n\n \n\nFIA - Future Content Network Scenarios, 2009. http://www.future-\ninternet.eu/fileadmin/documents/prague_documents/FIA-\nFCN Internet Scenarios 20090507.pdf\n\n \n\n \n\n \n\n \n\n \n\nFP7-257178\n\nCHOReOS 62",
    "Page_74": "[FIA09]\n\nG. Tselenis et al. (Eds). Towards the Future Internet. |OS Press. 2009.\nhttp://www. future-internet.eu/publications/fia-book-2009.html.\n\n \n\n[FIAFCNO7]\n\nFIA Future Content Networks (FCN), Scenarios, May 2009, http://www. future-\ninternet.eu/fileadmin/documents/prague_documents/F |A-\nFCN_Internet_Scenarios_20090507.pdf\n\n \n\n[FIAMANA09]\n\nFIA Management and Service-aware Architectures (MANA), Scenarios for Future\nInternet, May 2009,\n\nhttp://www. futureinternet.eu/fileadmin/documents/prague_documents/MANA_Sce\nnarios-Final.pdf\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n[FlArch11] Ec FlArch Group, Fundamental Limitations of Current Internet and the Path to\nFuture Internet, 2011, Available at\nhttp://ec.europa.eu/information_society/activities/foi/library/docs/fiarch-current-\ninternet-limitations-march2011.pdf.\n\n[FIRE09] FIRE Use Scenarios (FIRE), May 2009, http://www. ict-\nfireworks .eu/fileadmin/events/FIA-P rague/1_Avessta.pdf\n\n[FISE09] FIA Future Internet Socio-Economics (FISE), FISE Scenarios and Effects,\nFebruary 2009, http:/Awww.smoothit.org/wiki/omwiki.php/FISE/Scenarios\n\n[FISO09] FIA Future Internet Service Offer (FISO), Scenarios, February 2009,\nhttp://services future-internet.eu/index.php/FISO_Scenarios\n\n[FM1I10] Future Media Internet task force, Future Media Internet Research Challenges\nand the Road Ahead, 2010, Available at htto://www.future-\ninternet.eu/uploads/media/F MI-TF-White_ paper 042010 01.pdf\n\n[G art07] Gartner. 2007 Press Release: Bad Technical Implementations and Lack of\nGovernance Increase Risks of Failure in SOA Projects. http://www.gartner.com/\nit/page.jsp? id=508397\n\n[GRAPI11] N. Georgantas, M. A. Rahaman, H. Ameziani, A. Pathak and V. Issarny. A\n\nCoordination Middleware for Orchestrating Heterogeneous Distributed Systems.\nIn Proc. 6th International Conference on Grid and Pervasive Computing (GPC\n2011). LNCS 6646. Oulu, Finland, May 2011.\n\n \n\n[Hirabaru08]\n\nAKARI Architecture Design Project: New Generation Network Architecture:\nAKARI Conceptual Design (ver1.1), 2008, Available at\nhttp://nag.nict.go.jp/topics/AKAR | fulltext - e translated version 1 1.pdf.\n\n \n\n[HMY 06]\n\nG. Huang, H. Mei, and F. Yang. Runtime Recovery and Manipulation of Software\nArchitecture of Component-based Systems. International J ournal of Automated\nS oftware Engineering,13(2), 2006.\n\n \n\n[HRHO1]\n\nJ. Hammond, R. Rawlings and A. Hall. Will lt Work?, Proceedings 5th IEEE\nInternational Symposium on Requirements Engineering, IEEE Computer Society,\n102-109, 2001\n\n \n\n[HS 10]\n\nPieter Hens, Monique Snoeck, Manu de Backer, and Geert Poels. Decentralized\nEvent-based Orchestration in edBPM 2010P roceedings of the 4th international\nworkshop on Event Driven Business Process Management, pages 1-12,\nHoboken, NJ, USA, 2010, BPM 2010.\n\n \n\n[l1OT08]\n\nBassi, A., Europe, H., Horn: Internet of Things in 2020: Roadmap for the Future,\nInternet of Things workshop report, 2008, Available at http://Awww.iot-\nvisitthefuture.eu/fileadmin/documents/researchforeurope/270808_loT_in_2020_\nWorkshop_Report_V1-1.pdf.\n\n \n\n \n\nJAC95]\n\n \n\nM. Jackson. “Software Requirements and Specifications”. Addison-Wesley, 1995\n\n \n\n \n\nFP7-257178\n\nCHOReOS 63",
    "Page_75": "J) ain06] Raj J ain. Internet 3.0: Ten Problems with Current Internet Architecture and\nSolutions for the Next Generation. MILCOM, pages 1-9, 2006.\n\n[KIMR04] S.M. Kim and M.-C. Rosu. A survey of public web services. In WWW (Alternate\nTrack Papers & Posters), pages 312-313, 2004.\n\n[Kortuem10] Gerd Kortuem, Fahim kawsar, Vasughi Sundramoorthy, Daniel Fitton. Smart\nobjects as building blocks of the internet. IEEE Internet Computing, pages 44,\n2010.\n\n[Kumar10] Kumar, K. and Lu, Y.H., Cloud Computing for Mobile Users: Can Offloading\nComputation Save Energy?, Computer IEEE, pages 51-56, 2010.\n\n[Lassila07] Lassila, O. and Hendler, J ., Embracing “Web 3.0”, IEEE Internet Computing,\npages 90-93, 2007.\n\n[LILZLXS07] Y.Li, Y. Liu, L.-}. Zhang, G. Li, B. Xie, and). Sun. An exploratory study of web\nservices on the internet. In ICWS, pages 380-387, 2007.\n\n[Marks2008] Eric A. Marks, Service Oriented Architecture Governance for the Services Driven\nEnterprise, J ohn Wiley & Sons, Inc. Editions, 2008\n\n[MH06] H. Muccini and R. Hierons (Eds). ROSATEA 2006: The Role Of Software\nArchitecture in Testing and Analysis. ACM Digital Library, 2006.\n\n[MLR07] N.A.M. Maiden, J. Lockerbie, D. Randall, S.J ones and D. Bush. Using\nSatisfaction Arguments to Enhance i* Modelling of an Air Traffic Management\nSystem. Proceedings 15th IEEE International Conference on Requirements\nEngineering, IEEE Computer Society Press, 49-52, 2007\n\n[MLRO7] N.A.M. Maiden, J. Lockerbie, D. Randall, S.J ones and D. Bush. Using\n\n \n\nSatisfaction Arguments to Enhance i* Modelling of an Air Traffic Management\nSystem. Proceedings 15th IEEE International Conference on Requirements\nEngineering, IEEE Computer Society Press, 49-52, 2007\n\n \n\nNEXOFAFP 10]\n\nNEXOF-RA project (http://www.nexof-ra.eu/). Deliverable D7.2c: Definition of an\narchitectural framework & principles, 2010. http://www.nexof-\nra.eu/sites/default/files/D7.2c%20Definition% 200f%20an%20architectural%20fra\nmework%20and%20principles%200.9.pdf\n\n \n\n \n\n \n\n \n\n \n\n \n\nNEXOFPIS10]\n\nS. Agassi, P. Bisson, J. Manuel C. Fonseca, R.J imenez-Peris, A. De Nigro, D.\nDesideri, P. Corte. Pattern Internet of Service, http://www.nexof-\nra.eu/sites/default/files/Internet% 200f%20S ervice%200.6.pdf, 2010.\n\n \n\n \n\n \n\n \n\nNEXOFRA_D63]\n\nNEXOF-RA Deliverable D6.3 NEXOF Reference Model, 2010. http://www.nexof-\nra.eu/sites/default/files/D6.3_v1.0.pdf\n\n \n\n \n\nNEXOFRA_D73]\n\nNEXOF-RA Deliverable D7.3 Conceptual architectural view, 2008.\nhttp://www.nexof-\nra.eu/sites/default/files/D7.3_ Conceptual Architectural View__v1.0__0.doc\n\n \n\nNEXOFRA_D74]\n\nNEXOF-RA Deliverable D7.4 RA Specification Baseline v0.45, 2008.\nhttps ://files. morfeo-project.org/mymobileweb/public/NEXOF-RA/D7.4/D7.4%20-\n%20RA%20S pecification% 20B aselinev0.45-THA.doc\n\n \n\n \n\n \n\n \n\n \n\n \n\nNEXOFRAS10]\n\nNEXOF-RA project (http://www.nexof-ra.eu/). Deliverable D7.5b: RA\nSpecification V1.0 (Pattern Compass), 2010. http://www.nexof-\nra.eu/sites/default/files/D7.5b%20RA%20S pecification% 20V0.4a% 20(P attern%2\nOC ompass).pdf\n\n \n\n \n\n \n\n \n\n \n\n \n\n[\n\n \n\nNEXOFRM10]\n\n \n\n \n\n \n\nNEXOF-RA project (http://www.nexof-ra.eu/). Deliverable D6.3: The NEXOF-RA\nReference Model V3.0. 2010 http://Awww.nexof-\n\nra.eu/sites/default/files/D6.3_v1.0.pdf\n\n \n\n \n\n \n\nFP7-257178\n\nCHOReOS 64",
    "Page_76": "[OAS06] C.M. MacKenzie, K. Laskey, F. McCabe, P. F. Brown, R. Metz. OASIS\nReference Model for Service Oriented Architecture 1.0. Committee Specification\n1, http://www.oasis-open.org/committees/download.php/19679/soa-rm-cs.pdf,\n2006\n\n[Pap09] D. Papadimitriou, Future Internet{The Cross-ETP Vision Document. European\n\nTechnology Platform, Alcatel Lucent 8 (2009)\n\n \n\n[Pereira08]\n\nJ orge Pereira. From autonomous to cooperative distributed monitoring and\ncontrol: Towards the Internet of smart things. ERCIM Workshop on eMobility,\n2008.\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n[Plastic08] PLASTIC consortium. “A B3G Service Platform: The IST PLASTIC Project”.\nPLASTIC White Paper, http://plastic.paris-\nrocquencourt.inria.fr/plasticwhitepaper.pdf, 2008.\n\n[PlasticWS ] PLASTIC consortium. The PLATIC web site: http://plastic.paris-\nrocquencourt.inria.fr/\n\n[RW109] FIA Real World Internet (RWI), Scenarios, March 2009, Available at\nhttp://rwi.future-internet.eu/index.php/RW1I_Scenarios\n\n[Schonwalder09] | Schonwalder, |. and Fouquet, M. and Rodosek, G. and Hochstatter, |., Future\nInternet=C ontent+ Services + Management, Communications Magazine, IEEE,\npages 27-33, 2009\n\n[SeCSE] SeCSE, Project web site: http://www.secse-project.eu/\n\n[SF09] Service Finder: Realizing Web Service Discovery at Web Scale, February 2009,\nhttp://www.service-finder.eu/attachments/D8.4.pdf.\n\n[SLC10] Vanessa Strickera, Kim Lauenrotha, Piero Corteb, Frédéric Gittlerc, Stefano De\n\nPanfilisb, and Klaus Pohl, Creating a Reference Architecture for Service-Based\nSystems A Pattern-Based Approach. DOI:10.3233/978-1-60750-539-6-149.\nTowards the Future Internet, G. Tselentis et al. (Eds.) |OS Press, 2010\n\n \n\n[SOA4All_D111]\n\nSOA4AII Deliverable D1.1.1 Design Principles for a Service Web v1, 2008.\nhttp://www.soa4all.eu/file-upload. html? func=startdown&id=25\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n[SoaML] http://www.omg.org/spec/SoaML/\n\n[Stuckmann09] Peter Stuckmann, Rainer Zimmermann. European research on Future Internet\ndesign. IEEE Wireless Communication, pages 14-22, 2009.\n\n[SWHA05] L. Schubert, M. Wilson, J. Haller, A. Arenas, A. Svirskas, P. Giambiagi, ] . Doser,\nE. Lupo. The TrustCoM Conceptual Models. 2005\n\n(TF110] Towards the Future Internet - Emerging Trends from European Research.\nEditors: Georgios Tselentis, Alex Galis, Anastasius Gavras, Srdjan Krco,\nVolkmar Lotz, Elena Simperl, Burkhard Stiller, Theodore Zahariadis.\nDO1:10.3233/978-1-60750-539-6-149. IOS Press, 2010\n\n[Theodore09] Zahariadis, T.B. and PAU, G. and CELETTO, L. and DARAS, P., Seamless\nContent Delivery in the Future Mobile Internet, IEEE Wireless Communications,\n2009.\n\n[Thompson05] Graig W. Thomson, Smart devices and soft controllers. IEEE Internet Computing,\n\n \n\npages 82-85, 2005.\n\n \n\n \n\nFP7-257178\n\nCHOReOS 65",
    "Page_77": "[T1108]\n\nM.Tivoli and P.Inverardi. Failure-free coordinators synthesis for component-\nbased architectures, Science of Computer Programming, 71(3), pp. 181-212,\nMay 2008. DOI REF: http://dx.doi.org/10.1016/j.scico.2008.03.001\n\n \n\n[Toma09]\n\nloan Toma, Elena Simperl, Agata Filipowska , Graham Hench , J ohn Domingue.\nSemantics-Driven Interoperability on the Future Internet. International\nConference on Semantic Computing, 2009.\n\n \n\n[TSF09]\n\n|. Toma, E. Simperl, A. Filipowska, G. Hench, Domingue, J .: Semantics-Driven\nInteroperability on the Future Internet. In: IEEE International Conference on\nSemantic Computing, (ICSC) (2009)\n\n \n\n[UDDI03]\n\nOASIS group. Universal Description, Discovery and Integration (UDDI), version\n3.0.1. Technical report, OASIS group, 2003. http://uddi.xml.org/\n\n \n\n[ULS06]\n\nUltra-Large-S cale Systems. The Software Challenge of the Future. Software\nEngineering Institute, Carnegie Mellon. Pittsburgh, PA., 2006.\n\n \n\n[UMLTest05]\n\nOMG, UML Testing Profile Version 1.0 formal/05-07-07\n\n \n\n[UPDM05]\n\nOMG, Unified Profile For The Department Of Defense Architecture Framework\n(DoDAF) And The Ministry Of Defence Architecture Framework (MODAF),\nhttp://www.omg.org/spec/UPDM/\n\n \n\n[USDL10]\n\nhttp://www. internet-of-services.com/index.php? id=288&L=0 Unified Service\nDescription Language available at http://www. internet-of-\nservices.com/fileadmin/IOS/user upload/pdf/US DL-3.0-module-core-M2-\n20091228.pdf Décembre 2009 SAP research\n\n \n\n \n\n \n\n \n\n \n\n[Viroli2007]\n\nViroli, Mirko and Denti, Enrico and Ricci, Alessandro, Engineering a BPEL\norchestration engine as a multi-agent system, In proceedings of Sci. Comput.\nProgram J ournal, May, 2007, p226— 245, Elsevier North-Holland, Inc.\n\n \n\n[XML09]\n\nW3C: XML Schema Definition Language, version 1.1, 2009.\nhttp://www.w3.org/XML/Schema.\n\n \n\n[Yang, 2007]\n\nYang, H.; Zhao, X.; Cai, C. & Qiu, Z. Exploring the Connection of Choreography\nand Orchestration with Exception Handling and Finalization/Compensation\nFORTE, 2007, 81-96\n\n \n\n[Y ildiz2007]\n\nY ildiz, Ustun and Godart, Claude Towards decentralized service orchestrations\nProceedings of the 2007 ACM symposium on Applied computing 2007 Seoul,\nKorea, p 1662— 1666\n\n \n\n[YLG 07]\n\nUstun Yildiz INRIA - LORIA, Gabriel Lippmann, Claude Godart Towards\ndecentralized service orchestrations Symposium on Applied Computing\nProceedings of the 2007 ACM symposium on Applied computing Seoul, Korea\nSESSION: Web technologies Pages: 1662 - 1666 Year of Publication: 2007\nISBN:1-59593-480-4\n\n \n\n[Zaha2006]\n\nJ.M. Zaha and A. Barros and M. Dumas and A. terHofstede Let's Dance: A\nLanguage for Service Behavior Modeling Proceedings of the 14th International\nConference on Cooperative Information Systems, (CoopIS) 2006\n\n \n\n \n\n[Zhang10]\n\n \n\nZhang, S. and Zhang, S. and Chen, X. and Huo, X., Cloud Computing Research\nand Development Trend, 2010 Second International Conference on Future\nNetworks, IEEE, pages 93-97, 2010.\n\n \n\n \n\nFP7-257178\n\nCHOReOS 66"
}